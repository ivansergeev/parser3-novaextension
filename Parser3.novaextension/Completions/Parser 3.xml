<?xml version="1.0" encoding="UTF-8"?>
<completions>

	<!-- "foo" -->
    <provider name="constant">
        <syntax>parser3</syntax>
        <selector>*:not(comment)</selector>
        <expression>(?&lt;=\s)([a-zA-Z-]+)</expression>
        <symbols type="constant" />
        <set>parser3.core.values</set>
        <set>parser3.core.operator.logic</set>
        <set>parser3.keywords.types</set>
    </provider>
    
	<!-- "[foo]" -->
	<provider name="constant">
        <syntax>parser3</syntax>
        <selector>*:not(comment)</selector>
        <expression>(?&lt;=\[)([a-zA-Z-]+)(?=;|\])</expression>
        <symbols type="property" />
        <set>parser3.keywords.property</set>
    </provider>

	<!-- .foo -->
    <provider name="instance.value">
        <syntax>parser3</syntax>
        <selector>*:not(comment)</selector>
        <expression>(?&lt;=\.)([a-zA-Z-]+)</expression>
        <symbols type="property" />
        <set>parser3.instance.values</set>
    </provider>

	<!-- .foo[ -->
    <provider name="instance.method">
        <syntax>parser3</syntax>
        <selector>*:not(comment)</selector>
        <expression>(?&lt;=\.)([a-zA-Z-]+)</expression>
        <symbols type="method" />
        <set>parser3.instance.method</set>
    </provider>
	
	<!-- "error types" -->	
    <provider name="error.types">
        <syntax>parser3</syntax>
        <selector>*:not(comment)</selector>
        <expression>([a-z]+)</expression>
        <symbols type="constant" />
        <set>parser3.keywords.error.types</set>
    </provider>
	
	<!-- "@foo" -->	
    <provider name="core.method">
        <syntax>parser3</syntax>
        <selector>*:not(comment)</selector>
        <expression>(?&lt;=^\@)([a-zA-Z_]+)</expression>
        <symbols type="method" />
        <set>parser3.core.method</set>
    </provider>

    <!-- "$foo" -->
    <provider name="variable">
        <syntax>parser3</syntax>
        <selector>*:not(comment)</selector>
        <expression>(?&lt;=\$)(([a-zA-Z_][a-zA-Z_]*)?)</expression>
        <symbols type="variable" />
        <set>parser3.core.variables</set>
    </provider>
   
    <!-- "$.foo[({" -->
    <provider name="variable">
        <syntax>parser3</syntax>
        <selector>*:not(comment)</selector>
        <expression>(?&lt;=\$\.)(([a-zA-Z_][a-zA-Z_]*)?)</expression>
        <symbols type="property" />
        <set>parser3.core.options</set>
    </provider>

    <!-- "^foo" -->
    <provider name="function">
        <syntax>parser3</syntax>
        <selector>*:not(comment)</selector>
        <expression>(?&lt;=\^)([a-zA-Z0-9_\x7f-\xff]+)</expression>
        <symbols type="class" />
        <set>parser3.core.functions</set>
    </provider>
	
	
<!-- "^classes" -->
    <provider name="classes">
        <syntax>parser3</syntax>
        <selector>*:not(comment)</selector>
        <expression>(?&lt;=\^)([a-z]+)</expression>
        <symbols type="class" />
        <set>parser3.core.classes</set>
    </provider>
    
<!-- "$classes" -->
    <provider name="classes.static">
        <syntax>parser3</syntax>
        <selector>*:not(comment)</selector>
        <expression>(?&lt;=\$)([a-z]+)</expression>
        <symbols type="class" />
        <set>parser3.core.classes.static</set>
    </provider>

<!-- ^date -->

    <provider name="date">
        <syntax>parser3</syntax>
        <selector>*:not(comment)</selector>
        <expression>(?&lt;=\^date\:)(\:?[a-z-]+)</expression>
        <symbols type="method" />
        <set>parser3.core.date</set>
    </provider>

<!-- ^double -->

    <provider name="double">
        <syntax>parser3</syntax>
        <selector>*:not(comment)</selector>
        <expression>(?&lt;=\^double\:)([a-z]+)</expression>
        <symbols type="method" />
        <set>parser3.core.double</set>
    </provider>

<!-- ^int -->

    <provider name="int">
        <syntax>parser3</syntax>
        <selector>*:not(comment)</selector>
        <expression>(?&lt;=\^int\:)([a-z]+)</expression>
        <symbols type="method" />
        <set>parser3.core.int</set>
    </provider>

<!-- $env -->

    <provider name="env">
        <syntax>parser3</syntax>
        <selector>*:not(comment)</selector>
        <expression>(?&lt;=\$env\:)([a-zA-Z0-9_]+)</expression>
        <symbols type="property" />
        <set>parser3.core.env</set>
    </provider>
    
	<provider name="env.method">
        <syntax>parser3</syntax>
        <selector>*:not(comment)</selector>
        <expression>(?&lt;=\^env\:)([a-zA-Z0-9_]+)</expression>
        <symbols type="property" />
        <set>parser3.core.env.method</set>
    </provider>

<!-- $console -->

    <provider name="console">
        <syntax>parser3</syntax>
        <selector>*:not(comment)</selector>
        <expression>(?&lt;=\$console\:)([a-z]+)</expression>
        <symbols type="property,method" />
        <set>parser3.core.console.static</set>
    </provider>

<!-- "$cookie" -->

    <provider name="cookie">
        <syntax>parser3</syntax>
        <selector>*:not(comment)</selector>
        <expression>(?&lt;=\$cookie\:)([a-z]+)</expression>
        <symbols type="property" />
        <set>parser3.core.cookie</set>
    </provider>
    
	<provider name="cookie.static">
        <syntax>parser3</syntax>
        <selector>*:not(comment)</selector>
        <expression>(?&lt;=\^cookie\:)([a-z]+)</expression>
        <symbols type="property" />
        <set>parser3.core.cookie.static</set>
    </provider>
   
<!-- "^curl" -->
    <provider name="curl">
        <syntax>parser3</syntax>
        <selector>*:not(comment)</selector>
        <expression>(?&lt;=\^curl\:)([a-z]+)</expression>
        <symbols type="method" />
        <set>parser3.core.curl</set>
    </provider>

    <!-- "curl options" -->
    <!-- 
		<provider name="curl-options">
        <syntax>parser3</syntax>
        <selector>parser3.block.curl-options</selector>
        <expression>(\$\.[a-zA-Z0-9_\x7f-\xff]+)</expression>
        <symbols type="property" />
        <set>parser3.core.curl.options</set>
    </provider> 
	-->
	
<!-- "^file:" -->
	<provider name="file">
		<syntax>parser3</syntax>
		<selector>*:not(comment)</selector>
		<expression>(?&lt;=\^file\:)(\:?[a-z0-9]+)</expression>
		<symbols type="method" />
		<set>parser3.core.file</set>
	</provider>

<!-- "^form:" -->
	<provider name="form">
		<syntax>parser3</syntax>
		<selector>*:not(comment)</selector>
		<expression>(?&lt;=\$form\:)([a-z]+)</expression>
		<symbols type="property" />
		<set>parser3.core.form</set>
	</provider>
	
	<provider name="form.static">
		<syntax>parser3</syntax>
		<selector>*:not(comment)</selector>
		<expression>(?&lt;=\^form\:)([a-z]+)</expression>
		<symbols type="property" />
		<set>parser3.core.form.static</set>
	</provider>

<!-- "^hash::" -->
	<provider name="hash">
		<syntax>parser3</syntax>
		<selector>*:not(comment)</selector>
		<expression>(?&lt;=\^hash\:\:)([a-z]+)</expression>
		<symbols type="method" />
		<set>parser3.core.hash</set>
	</provider>

<!-- "^hashfile::" -->
	<provider name="hashfile">
		<syntax>parser3</syntax>
		<selector>*:not(comment)</selector>
		<expression>(?&lt;=\^hashfile\:\:)([a-z]+)</expression>
		<symbols type="method" />
		<set>parser3.core.hashfile</set>
	</provider>

<!-- "^image::" -->
	<provider name="image">
		<syntax>parser3</syntax>
		<selector>*:not(comment)</selector>
		<expression>(?&lt;=\^image\:\:)([a-z]+)</expression>
		<symbols type="method" />
		<set>parser3.core.image</set>
	</provider>

<!-- "^string" -->
	<provider name="string">
		<syntax>parser3</syntax>
		<selector>*:not(comment)</selector>
		<expression>(?&lt;=\^string\:)([a-z0-9-]+)</expression>
		<symbols type="method" />
		<set>parser3.core.string</set>
	</provider>

<!-- "^taint" -->
	<provider name="taint-options">
		<syntax>parser3</syntax>
		<selector>parser3.block.taint.options</selector>
		<expression>([a-z\-]+)</expression>
		<symbols type="property" />
		<set>parser3.core.taint.options</set>
	</provider> 
	
<!-- "^table" -->
	<provider name="table">
		<syntax>parser3</syntax>
		<selector>*:not(comment)</selector>
		<expression>(?&lt;=\^table\:\:)([a-z]+)</expression>
		<symbols type="method" />
		<set>parser3.core.table</set>
	</provider>

<!-- "^void" -->
	<provider name="void">
		<syntax>parser3</syntax>
		<selector>*:not(comment)</selector>
		<expression>(?&lt;=\^void\:)([a-z]+)</expression>
		<symbols type="method" />
		<set>parser3.core.void</set>
	</provider>

<!-- SETS -->

    <!-- Built-in values -->
    <set name="parser3.core.values" symbol="constant">
        <completion string="true" />
        <completion string="false" />
    </set>
   
    <set name="parser3.core.operator.logic" symbol="constant">
        <completion string="eq" />
        <completion string="ne" />
        <completion string="is" />
        <completion string="in" />
        <completion string="lt" />
        <completion string="qt" />
        <completion string="le" />
        <completion string="ge" />
        <completion string="-d" />
        <completion string="-f" />
    </set>
    
    <set name="parser3.core.variables" symbol="variable">
        <completion string="MAIN" />
        <completion string="LIMITS" />
        <completion string="MAIL" />
        <completion string="SQL" />
        <completion string="MIME-TYPES" />
        <completion string="key" />
        <completion string="value" />
    </set>
    
	

	<set name="parser3.core.options" symbol="property">
		<completion string="bind">
			<behavior>
				<append>[hash]</append>
			</behavior>
		</completion>
		<completion string="charset">
			<behavior>
				<append>[$[]]</append>
			</behavior>
		</completion>
		<completion string="colon">
			<behavior>
				<append>($[true|false])</append>
			</behavior>
		</completion>
		<completion string="content-type">
			<behavior>
				<append>[$[]]</append>
			</behavior>
		</completion>
		<completion string="default">
			<behavior>
				<append>($[])</append>
			</behavior>
		</completion>
		<completion string="default">
			<behavior>
				<append>{$[]}</append>
			</behavior>
		</completion>
		<completion string="distinct">
			<behavior>
				<append>($[true|false])</append>
			</behavior>
		</completion>
		<completion string="domain">
			<behavior>
				<append>[$[]]</append>
			</behavior>
		</completion>
		<completion string="expires">
			<behavior>
				<append>($[])</append>
			</behavior>
		</completion>
		<completion string="expires">
			<behavior>
				<append>[$[]]</append>
			</behavior>
		</completion>
		<completion string="httponly">
			<behavior>
				<append>(true)</append>
			</behavior>
		</completion>
		<completion string="file">
			<behavior>
				<append>[$[]]</append>
			</behavior>
		</completion>
		<completion string="from-charset">
			<behavior>
				<append>[$[]]</append>
			</behavior>
		</completion>
		<completion string="library">
			<behavior>
				<append>[$[]]</append>
			</behavior>
		</completion>
		<completion string="limit">
			<behavior>
				<append>($[])</append>
			</behavior>
		</completion>
		<completion string="lineno">
			<behavior>
				<append>($[])</append>
			</behavior>
		</completion>
		<completion string="main">
			<behavior>
				<append>[$[]]</append>
			</behavior>
		</completion>
		<completion string="mode">
			<behavior>
				<append>[$[]]</append>
			</behavior>
		</completion>
		<completion string="ms">
			<behavior>
				<append>($[false|true])</append>
			</behavior>
		</completion>
		<completion string="name">
			<behavior>
				<append>[$[]]</append>
			</behavior>
		</completion>
		<completion string="type">
			<behavior>
				<append>[$[hash|string|table]]</append>
			</behavior>
		</completion>
		<completion string="to-charset">
			<behavior>
				<append>[$[]]</append>
			</behavior>
		</completion>
		<completion string="replace">
			<behavior>
				<append>($[false|true])</append>
			</behavior>
		</completion>
		<completion string="response-charset">
			<behavior>
				<append>[$[]]</append>
			</behavior>
		</completion>
		<completion string="offset">
			<behavior>
				<append>($[])</append>
			</behavior>
		</completion>
		<completion string="value">
			<behavior>
				<append>[$[]]</append>
			</behavior>
		</completion>
		<completion string="z">
			<behavior>
				<append>($[false|true])</append>
			</behavior>
		</completion>
	</set>
	
		
	<set name="parser3.core.method" symbol="method">
		<completion string="auto">
			<behavior>
				<append>[]
$[]</append>
			</behavior>
		</completion>
		<completion string="BASE">
			<behavior>
				<append>
$[]</append>
			</behavior>
		</completion>
		<completion string="CLASS">
			<behavior>
				<append>
$[]</append>
			</behavior>
		</completion>
		<completion string="create">
			<behavior>
				<append>[]
$[]</append>
			</behavior>
		</completion>
		<completion string="main">
			<behavior>
				<append>[]
$[]</append>
			</behavior>
		</completion>
		<completion string="postprocess">
			<behavior>
				<append>[body]
$[]</append>
			</behavior>
		</completion>
		<completion string="OPTIONS">
			<behavior>
				<append>
$[]</append>
			</behavior>
		</completion>
		<completion string="static">
			<behavior>
				<append>:$[name][]</append>
			</behavior>
		</completion>
		<completion string="USE">
			<behavior>
				<append>
$[]</append>
			</behavior>
		</completion>
		<completion string="unhandled_exception">
			<behavior>
				<append>[exception;stack]
$[]</append>
			</behavior>
		</completion>
	</set>
	
    <set name="parser3.keywords" symbol="statement">
        <completion string="break" />
        <completion string="case" />
        <completion string="else" />
        <completion string="for" />
        <completion string="foreach" />
        <completion string="result" />
        <completion string="static" />
        <completion string="switch" />
        <completion string="throw" />
        <completion string="try" />
        <completion string="use" />
        <completion string="while" />
    </set>
	
	<set name="parser3.keywords.types" symbol="constant">
		<completion string="date" />
		<completion string="hash" />
		<completion string="hashfile" />
		<completion string="junction" />
		<completion string="file" />
		<completion string="image" />
		<completion string="string" />
		<completion string="table" />
	</set>
	
	<set name="parser3.keywords.property" symbol="property">
		<completion string="text" />
		<completion string="binary" />
		<completion string="UTF-8" />
		<completion string="first" />
		<completion string="last" />
		<completion string="key" />
		<completion string="value" />
		<completion string="hash" />
		<completion string="desc" />
		<completion string="asc" />
	</set>
	
	<set name="parser3.keywords.error.types" symbol="constant">
		<completion string="parser.compile" />
		<completion string="parser.runtime" />
		<completion string="parser.interrupted" />
		<completion string="number.zerodivision " />
		<completion string="number.format" />
		<completion string="file.missing" />
		<completion string="file.access" />
		<completion string="file.read" />
		<completion string="file.execute" />
		<completion string="date.range" />
		<completion string="pcre.execute" />
		<completion string="image.format" />
		<completion string="sql.connect" />
		<completion string="sql.execute" />
		<completion string="xml" />
		<completion string="smtp.connect" />
		<completion string="smtp.execute" />
		<completion string="email.format" />
		<completion string="email.send" />
		<completion string="http.host" />
		<completion string="http.connect" />
		<completion string="http.response" />
		<completion string="http.status" />
		<completion string="http.timeout" />
		<completion string="curl.host" />
		<completion string="curl.connect" />
		<completion string="curl.status" />
		<completion string="curl.ssl" />
		<completion string="curl.timeout" />
		<completion string="curl.fail" />
	</set>

	<set name="parser3.instance.values" symbol="property">
		<!-- date -->
		<completion string="month" />
		<completion string="year" />
		<completion string="day" />
		<completion string="hour" />
		<completion string="minute" />
		<completion string="second" />
		<completion string="weekday" />
		<completion string="week" />
		<completion string="weekyear" />
		<completion string="yearday" />
		<completion string="daylightsaving" />
		<completion string="TZ" />
		<!-- file -->
		<completion string="name" />
		<completion string="size" />
		<completion string="size" />
		<completion string="text" />
		<completion string="cdate" />
		<completion string="mdate" />
		<completion string="adate" />
		<completion string="stderr" />
		<completion string="status" />
		<completion string="mode" />
		<completion string="content-type" />
		<completion string="SERVER" />
		<!-- hash -->
		<completion string="fields" />
		<completion string="_default" />
		<!-- image -->
		<completion string="src" />
		<completion string="width" />
		<completion string="height" />
		<completion string="exif" />
	</set>
	
	
	<set name="parser3.instance.method" symbol="method">
		<!-- file -->
		<completion string="base64">
			<behavior>
				<append>[]</append>
			</behavior>
		</completion>
		<completion string="crc32">
			<behavior>
				<append>[]</append>
			</behavior>
		</completion>
		
		<completion string="md5">
			<behavior>
				<append>[]</append>
			</behavior>
		</completion>
		<completion string="sql-string">
			<behavior>
				<append>[]</append>
			</behavior>
		</completion>
		<completion string="save">
			<behavior>
				<append>[$[text|binary];$[filename]]</append>
			</behavior>
		</completion>
		<completion string="save">
			<behavior>
				<append>[$[text|binary];$[filename];
	$.charset[$[charset]]
]</append>
			</behavior>
		</completion>

<!-- date -->
		<completion string="gmt-string">
			<behavior>
				<append>[]</append>
			</behavior>
		</completion>
		<completion string="iso-string">
			<behavior>
				<append>[]</append>
			</behavior>
		</completion>
		<completion string="iso-string">
			<behavior>
				<append>[
	$.colon($[true/false])
	$.ms($[false/false])
	$.z($[false/true])
]</append>
			</behavior>
		</completion>
		<completion string="last-day">
			<behavior>
				<append>[]</append>
			</behavior>
		</completion>
		<completion string="roll">
			<behavior>
				<append>[$[year|month|day]]($[value])</append>
			</behavior>
		</completion>
		<completion string="roll">
			<behavior>
				<append>[TZ][$[new timezone]]</append>
			</behavior>
		</completion>
		<completion string="sql-string">
			<behavior>
				<append>[]</append>
			</behavior>
		</completion>
		<completion string="sql-string">
			<behavior>
				<append>[$[datetime|date|time]]</append>
			</behavior>
		</completion>
		<completion string="unix-timestamp">
			<behavior>
				<append>[]</append>
			</behavior>
		</completion>
		
<!-- hash -->
		<completion string="_at">
			<behavior>
				<append>($[number])</append>
			</behavior>
		</completion>
		<completion string="_at">
			<behavior>
				<append>[$[first|last]]</append>
			</behavior>
		</completion>
		<completion string="at">
			<behavior>
				<append>($[number])</append>
			</behavior>
		</completion>
		<completion string="at">
			<behavior>
				<append>[$[first|last]]</append>
			</behavior>
		</completion>
		<completion string="at">
			<behavior>
				<append>($[number])[$[key|value|hash]]</append>
			</behavior>
		</completion>
		<completion string="at">
			<behavior>
				<append>[$[first|last];$[key|value|hash]]</append>
			</behavior>
		</completion>
		
		<completion string="_count">
			<behavior>
				<append>[]</append>
			</behavior>
		</completion>
		<completion string="count">
			<behavior>
				<append>[]</append>
			</behavior>
		</completion>
		<completion string="_keys">
			<behavior>
				<append>[]</append>
			</behavior>
		</completion>
		<completion string="_keys">
			<behavior>
				<append>[$[field]]</append>
			</behavior>
		</completion>
		<completion string="keys">
			<behavior>
				<append>[]</append>
			</behavior>
		</completion>
		<completion string="keys">
			<behavior>
				<append>[$[field]]</append>
			</behavior>
		</completion>
		<completion string="contains">
			<behavior>
				<append>[$[key]]</append>
			</behavior>
		</completion>
		<completion string="delete">
			<behavior>
				<append>[$[key]]</append>
			</behavior>
		</completion>
		<completion string="delete">
			<behavior>
				<append>[]</append>
			</behavior>
		</completion>
		<completion string="foreach">
			<behavior>
				<append>[key;value]{
	$[]
}</append>
			</behavior>
		</completion>
		<completion string="foreach">
			<behavior>
				<append>[key;value]{
	$[]
}[$[separator]]</append>
			</behavior>
		</completion>
		<completion string="foreach">
			<behavior>
				<append>[key;value]{
	$[]
}{
	$[separator]
}</append>
			</behavior>
		</completion>

		<completion string="add">
			<behavior>
				<append>[$[hash]]</append>
			</behavior>
		</completion>
		<completion string="intersection">
			<behavior>
				<append>[$[hash]]</append>
			</behavior>
		</completion>
		<completion string="intersects">
			<behavior>
				<append>[$[hash]]</append>
			</behavior>
		</completion>
		<completion string="sort">
			<behavior>
				<append>[$[key];$[value]]{
	$[sort function by string]
}</append>
			</behavior>
		</completion>
		<completion string="sort">
			<behavior>
				<append>[$[key];$[value]]{
	$[sort function by string]
}[$[desc|asc]]</append>
			</behavior>
		</completion>
		<completion string="sort">
			<behavior>
				<append>[$[key];$[value]](
	$[sort function by number]
)</append>
			</behavior>
		</completion>
		<completion string="sort">
			<behavior>
				<append>[$[key];$[value]](
	$[sort function by number]
)[$[desc|asc]]</append>
			</behavior>
		</completion>
		<completion string="sub">
			<behavior>
				<append>[$[hash]]</append>
			</behavior>
		</completion>
		<completion string="union">
			<behavior>
				<append>[$[hash]]</append>
			</behavior>
		</completion>

<!-- hashfile -->
		<completion string="cleanup">
			<behavior>
				<append>[]</append>
			</behavior>
		</completion>
		<completion string="hash">
			<behavior>
				<append>[]</append>
			</behavior>
		</completion>
<!-- image -->
		<completion string="gif">
			<behavior>
				<append>[]</append>
			</behavior>
		</completion>
		<completion string="gif">
			<behavior>
				<append>[$[filename]]</append>
			</behavior>
		</completion>
		<completion string="html">
			<behavior>
				<append>[]</append>
			</behavior>
		</completion>
		<completion string="html">
			<behavior>
				<append>[
	$.border[$[border]]		
	$.alt[$[alter text]]				
]</append>
			</behavior>
		</completion>
		<!-- static -->
		<completion string="line-style">
			<behavior>
				<append>[$[***   ]]</append>
			</behavior>
		</completion>
		<!-- static -->
		<completion string="line-width">
			<behavior>
				<append>($[width])</append>
			</behavior>
		</completion>
		<completion string="arc">
			<behavior>
				<append>($[center x];$[center y];$[width];$[height];$[start in degrees];$[end in degrees];$[color])</append>
			</behavior>
		</completion>
		<completion string="bar">
			<behavior>
				<append>($[x0];$[y0];$[x1];$[y1];$[color])</append>
			</behavior>
		</completion>
		<completion string="copy">
			<behavior>
				<append>[$[src image]]($[x1];$[y1];$[width];$[height];$[x2];$[y2])</append>
			</behavior>
		</completion>
		<completion string="copy">
			<behavior>
				<append>[$[src image]]($[x1];$[y1];$[width 1];$[height 1];$[x2];$[y2];$[width 2];$[height 2];$[color])</append>
			</behavior>
		</completion>
		<completion string="fill">
			<behavior>
				<append>($[x];$[y];$[color])</append>
			</behavior>
		</completion>
		<completion string="font">
			<behavior>
				<append>[$[symbols];$[font image]]($[space width])</append>
			</behavior>
		</completion>
		<completion string="font">
			<behavior>
				<append>[$[symbols];$[font image]]($[space width];$[symbol width])</append>
			</behavior>
		</completion>
		<completion string="font">
			<behavior>
				<append>[$[symbols];$[font image]][
	$.space(0)
	$.width(0)
	$.spacing(0)
]</append>
			</behavior>
		</completion>
		<completion string="length">
			<behavior>
				<append>[$[text]]</append>
			</behavior>
		</completion>
		<completion string="line">
			<behavior>
				<append>($[x0];$[y0];$[x1];$[y1];$[color])</append>
			</behavior>
		</completion>
		<completion string="pixel">
			<behavior>
				<append>($[x];$[y])</append>
			</behavior>
		</completion>
		<completion string="pixel">
			<behavior>
				<append>($[x];$[y];$[color])</append>
			</behavior>
		</completion>
		<completion string="polybar">
			<behavior>
				<append>($[color])[$[coordinates table]]</append>
			</behavior>
		</completion>
		<completion string="polygon">
			<behavior>
				<append>($[color])[$[coordinates table]]</append>
			</behavior>
		</completion>
		<completion string="polyline">
			<behavior>
				<append>($[color])[$[coordinates table]]</append>
			</behavior>
		</completion>
		<completion string="rectangle">
			<behavior>
				<append>($[x0];$[y0];$[x1];$[y1];$[line color])</append>
			</behavior>
		</completion>
		<completion string="replace">
			<behavior>
				<append>($[old color];$[new color])[$[coordinates table]]</append>
			</behavior>
		</completion>
		<completion string="replace">
			<behavior>
				<append>($[old color];$[new color])</append>
			</behavior>
		</completion>
		<completion string="sector">
			<behavior>
				<append>($[center x];$[center y];$[width];$[height];$[start in degrees];$[end in degrees];$[color])</append>
			</behavior>
		</completion>
		<completion string="text">
			<behavior>
				<append>($[x];$[y])[$[text]]</append>
			</behavior>
		</completion>
	</set>
	
<!-- ^CLASSES -->

	<set name="parser3.core.classes" symbol="class">
		<completion string="cookie">
			<behavior>
				<append>:</append>
			</behavior>
		</completion>
		<completion string="curl">
			<behavior>
				<append>:</append>
			</behavior>
		</completion>
		<completion string="date">
			<behavior>
				<append>:</append>
			</behavior>
		</completion>
		<completion string="double">
			<behavior>
				<append>:</append>
			</behavior>
		</completion>
		<completion string="int">
			<behavior>
				<append>:</append>
			</behavior>
		</completion>
		<completion string="env">
			<behavior>
				<append>:</append>
			</behavior>
		</completion>
		<completion string="file">
			<behavior>
				<append>:</append>
			</behavior>
		</completion>
		<completion string="form">
			<behavior>
				<append>:</append>
			</behavior>
		</completion>
		<completion string="hash">
			<behavior>
				<append>::</append>
			</behavior>
		</completion>
		<completion string="hashfile">
			<behavior>
				<append>::</append>
			</behavior>
		</completion>
		<completion string="image">
			<behavior>
				<append>::</append>
			</behavior>
		</completion>
		<completion string="string">
			<behavior>
				<append>:</append>
			</behavior>
		</completion>
		<completion string="response">
			<behavior>
				<append>:</append>
			</behavior>
		</completion>
		<completion string="table">
			<behavior>
				<append>::</append>
			</behavior>
		</completion>
		<completion string="void">
			<behavior>
				<append>:</append>
			</behavior>
		</completion>
	</set>

<!-- $CLASSES STATIC -->
		
	<set name="parser3.core.classes.static" symbol="class">
		<completion string="console">
			<behavior>
				<append>:</append>
			</behavior>
		</completion>
		<completion string="cookie">
			<behavior>
				<append>:</append>
			</behavior>
		</completion>
		<completion string="env">
			<behavior>
				<append>:</append>
			</behavior>
		</completion>
		<completion string="form">
			<behavior>
				<append>:</append>
			</behavior>
		</completion>
		<completion string="math">
			<behavior>
				<append>:</append>
			</behavior>
		</completion>
		<completion string="request">
			<behavior>
				<append>:</append>
			</behavior>
		</completion>
		<completion string="response">
			<behavior>
				<append>:</append>
			</behavior>
		</completion>
	</set>

<!-- ^DATE -->
	
	<set name="parser3.core.date" symbol="method">
		<completion string=":create">
			<behavior>
				<append>[$[]]</append>
			</behavior>
		</completion>
		<completion string=":now">
			<behavior>
				<append>[]</append>
			</behavior>
		</completion>
		<completion string=":now">
			<behavior>
				<append>[$[roll]]</append>
			</behavior>
		</completion>
		<completion string=":today">
			<behavior>
				<append>[]</append>
			</behavior>
		</completion>
		<completion string=":unix-timestamp">
			<behavior>
				<append>($[timestamp])</append>
			</behavior>
		</completion>
		<completion string="calendar">
			<behavior>
				<append>[$[rus|eng]]($[year];$[month])</append>
			</behavior>
		</completion>
		<completion string="calendar">
			<behavior>
				<append>[$[rus|eng]]($[year];$[month];$[day])</append>
			</behavior>
		</completion>
		<completion string="last-day">
			<behavior>
				<append>($[year];$[month])</append>
			</behavior>
		</completion>
		<completion string="roll">
			<behavior>
				<append>[TZ][$[default timezone]]</append>
			</behavior>
		</completion>
	</set>

<!-- ^DOUBLE -->
	
	<set name="parser3.core.double"  symbol="method">
		<completion string="sql">
			<behavior>
				<append>{
	$[sql]
}</append>
			</behavior>
		</completion>
		<completion string="sql">
			<behavior>
				<append>{
	$[sql]
}[
	$.limit(1)
	$.offset($[value])
	$.default{$[code]}
	$.default($[expression])
]</append>
			</behavior>
		</completion>
	</set>

<!-- ^INT -->
	
	<set name="parser3.core.int" symbol="method">
		<completion string="sql">
			<behavior>
				<append>{
	$[sql]
}</append>
			</behavior>
		</completion>
		<completion string="sql">
			<behavior>
				<append>{
	$[sql]
}[
	$.limit(1)
	$.offset($[value])
	$.default{$[code]}
	$.default($[expression])
]</append>
			</behavior>
		</completion>
	</set>

<!-- $ENV -->
	
	<set name="parser3.core.env" symbol="property">
		<completion string="fields"  />
		
		<completion string="PARSER_VERSION" />
		<completion string="REMOTE_ADDR" />
		<completion string="HTTP_USER_AGENT" />
		<completion string="HTTP_">
			<behavior>
				<append>$[]</append>
			</behavior>
		</completion>
	</set>
	
	<set name="parser3.core.env.method" symbol="property">
		<completion string="fields">
			<behavior>
				<append>.</append>
			</behavior>
		</completion>
	</set>

<!-- CONSOLE -->

	<set name="parser3.core.console.static" >
		<completion string="line" symbol="property"/>
		<completion string="line" symbol="method">
			<behavior>
				<append>[$[text]]</append>
			</behavior>
		</completion>
	</set>

<!-- COOKIE -->

	<set name="parser3.core.cookie" symbol="property">
		<completion string="fields" />
	</set>
	
	<set name="parser3.core.cookie.static" symbol="property">
		<completion string="fields">
			<behavior>
				<append>.</append>
			</behavior>
		</completion>
	</set>

<!-- CURL -->

	<set name="parser3.core.curl"  symbol="method">
<!-- info -->	
		<completion string="info">
			<behavior>
				<append>[]</append>
			</behavior>
		</completion>
		<completion string="info">
			<behavior>
				<append>[$[name]]</append>
			</behavior>
		</completion>
		
<!-- load -->	
		<completion string="load">
			<behavior>
				<append>[]</append>
			</behavior>
		</completion>
		<completion string="load">
			<behavior>
				<append>[$[options]]</append>
			</behavior>
		</completion>
<!-- options -->	
		<completion string="options">
			<behavior>
				<append>[$[options]]</append>
			</behavior>
		</completion>
<!-- session -->	
		<completion string="session">
			<behavior>
				<append>{$[code]}</append>
			</behavior>
		</completion>
<!-- version -->	
		<completion string="version">
			<behavior>
				<append>[]</append>
			</behavior>
		</completion>
	</set>

	<!-- CURL OPTIONS -->
<!--		
	<set name="parser3.core.curl.options">
		<completion string="$.charset">
			<behavior symbol="property">
				<append>[]</append>
			</behavior>
		</completion>
		<completion string="$.content-type">
			<behavior symbol="property">
				<append>[]</append>
			</behavior>
		</completion>
		<completion string="$.library">
			<behavior symbol="property">
				<append>[$[path]]</append>
			</behavior>
		</completion>
		<completion string="$.mode">
			<behavior symbol="property">
				<append>[$[text or binary]]</append>
			</behavior>
		</completion>
		<completion string="$.name">
			<behavior symbol="property">
				<append>[]</append>
			</behavior>
		</completion>
		<completion string="$.response-charset">
			<behavior symbol="property">
				<append>[]</append>
			</behavior>
		</completion>
		<completion string="$.timeout">
			<behavior symbol="property">
				<append>()</append>
			</behavior>
		</completion>
	</set>
-->

<!-- FILE -->
	
	<set name="parser3.core.file" symbol="method">

		<completion string=":base64">
			<behavior>
				<append>[$[text]]</append>
			</behavior>
		</completion>
		
		<completion string=":base64">
			<behavior>
				<append>[$[text|binary];$[filename];$[text];
	$.content-type[$[type]]
]</append>
			</behavior>
		</completion>
		
		<completion string=":cgi">
			<behavior>
				<append>[$[filename]]</append>
			</behavior>
		</completion>
		
		<completion string=":cgi">
			<behavior>
				<append>[$[filename];$[env hash]]</append>
			</behavior>
		</completion>
		
		<completion string=":cgi">
			<behavior>
				<append>[$[format];$[filename];$[env hash];$[arguments]]</append>
			</behavior>
		</completion>
		
		<completion string=":exec">
			<behavior>
				<append>[$[filename]]</append>
			</behavior>
		</completion>
		
		<completion string=":exec">
			<behavior>
				<append>[$[filename];$[env hash]]</append>
			</behavior>
		</completion>
		
		<completion string=":exec">
			<behavior>
				<append>[$[text|binary];$[filename];$[env hash];$[arguments]]</append>
			</behavior>
		</completion>
		
		<completion string=":create">
			<behavior>
				<append>[$[text|binary];$[filename];$[text]]</append>
			</behavior>
		</completion>
		
		<completion string=":create">
			<behavior>
				<append>[$[text|binary];$[filename];$[text];
	$.from-charset[$[from charset]]
	$.to-charset[$[to charset]]
	$.content-type[$[type]]
]</append>
			</behavior>
		</completion>
		
		<completion string=":create">
			<behavior>
				<append>[$[text];
	$.from-charset[$[from charset]]
	$.to-charset[$[to charset]]
	$.content-type[$[type]]
	$.name[$[filename]]
	$.mode[$[text|binary]]
]</append>
			</behavior>
		</completion>
		
		<completion string=":create">
			<behavior>
				<append>[$[file];
	$.from-charset[$[from charset]]
	$.to-charset[$[to charset]]
	$.content-type[$[type]]
	$.name[$[filename]]
	$.mode[$[text|binary]]
]</append>
			</behavior>
		</completion>
		
		<completion string=":load">
			<behavior>
				<append>[$[text|binary];$[filename]]</append>
			</behavior>
		</completion>
		
		<completion string=":load">
			<behavior>
				<append>[$[text|binary];$[filename];$[options]]</append>
			</behavior>
		</completion>
		
		<completion string=":load">
			<behavior>
				<append>[$[text|binary];$[filename];$[new filename]]</append>
			</behavior>
		</completion>
		
		<completion string=":load">
			<behavior>
				<append>[$[text|binary];$[filename];$[new filename];$[options]]</append>
			</behavior>
		</completion>
		
		<completion string=":sql">
			<behavior>
				<append>{
	$[sql]
}</append>
			</behavior>
		</completion>
		
		<completion string=":sql">
			<behavior>
				<append>{
	$[sql]
}[
	$.name[$[filename]]
	$.content-type[$[type]]
	$.limit(1)
	$.offset($[value])
]</append>
			</behavior>
		</completion>
		
		<completion string=":stat">
			<behavior>
				<append>[$[filename]]</append>
			</behavior>
		</completion>

<!-- static methods -->
		<completion string="base64">
			<behavior>
				<append>[$[filename]]</append>
			</behavior>
		</completion>		
		<completion string="basename">
			<behavior>
				<append>[$[path]]</append>
			</behavior>
		</completion>		
		<completion string="copy">
			<behavior>
				<append>[$[from];$[to]]</append>
			</behavior>
		</completion>		
		<completion string="crc32">
			<behavior>
				<append>[$[filename]]</append>
			</behavior>
		</completion>		
		<completion string="delete">
			<behavior>
				<append>[$[path];
	$.keep-empty-dirs(true)
	$.exception(false)
]</append>
			</behavior>
		</completion>		
		<completion string="dirname">
			<behavior>
				<append>[$[path]]</append>
			</behavior>
		</completion>		
		<completion string="find">
			<behavior>
				<append>[$[path]]{
	$[code]
}</append>
			</behavior>
		</completion>		
		<completion string="fullpath">
			<behavior>
				<append>[$[filename]]</append>
			</behavior>
		</completion>		
		<completion string="justext">
			<behavior>
				<append>[$[path]]</append>
			</behavior>
		</completion>		
		<completion string="justname">
			<behavior>
				<append>[$[path]]</append>
			</behavior>
		</completion>		
		<completion string="list">
			<behavior>
				<append>[$[path]]</append>
			</behavior>
		</completion>		
		<completion string="list">
			<behavior>
				<append>[$[path];$[regexp filter]]</append>
			</behavior>
		</completion>		
		<completion string="list">
			<behavior>
				<append>[$[path];
	$.filter[$[regexp]]
	$.stat($[true|false])
]</append>
			</behavior>
		</completion>		
		<completion string="lock">
			<behavior>
				<append>[$[lockfile]]{
	$[code]
}</append>
			</behavior>
		</completion>
		<completion string="md5">
			<behavior>
				<append>[$[filename]]</append>
			</behavior>
		</completion>		
		<completion string="move">
			<behavior>
				<append>[$[from];$[to]]</append>
			</behavior>
		</completion>		
		<completion string="move">
			<behavior>
				<append>[$[from];$[to];
	$.keep-empty-dirs(true)
]</append>
			</behavior>
		</completion>		
	</set>

<!-- FORM -->
	
	<set name="parser3.core.form" symbol="property">
		<completion string="fields" />
		<completion string="files" />
		<completion string="imap" />
		<completion string="qtail" />
		<completion string="tables" />
	</set>
	
	<set name="parser3.core.form.static" symbol="property">
		<completion string="fields">
			<behavior>
				<append>.</append>
			</behavior>
		</completion>
		<completion string="files">
			<behavior>
				<append>.</append>
			</behavior>
		</completion>
	</set>
	
<!-- HASH -->

	<set name="parser3.core.hash" symbol="method">
		<completion string="create">
			<behavior>
				<append>[$[]]</append>
			</behavior>
		</completion>
		<completion string="sql">
			<behavior>
				<append>{
	$[sql]
}</append>
			</behavior>
		</completion>
		<completion string="sql">
			<behavior>
				<append>{
	$[sql]
}[
	$.limit($[limit])
	$.offset($[offset])
	$.distinct($[true|false])
	$.bind[$[variables hash]]
	$.type[$[hash|string|table]]
]</append>
			</behavior>
		</completion>
	</set>

<!-- HASHFILE -->

	<set name="parser3.core.hashfile" symbol="method">
		<completion string="open">
			<behavior>
				<append>[$[file]]</append>
			</behavior>
		</completion>
	</set>

<!-- IMAGE -->

	<set name="parser3.core.image" symbol="method">
		<completion string="create">
			<behavior>
				<append>($[x];$[y])</append>
			</behavior>
		</completion>
		<completion string="create">
			<behavior>
				<append>($[x];$[y];$[color])</append>
			</behavior>
		</completion>
		<completion string="load">
			<behavior>
				<append>[$[file]]</append>
			</behavior>
		</completion>
		<completion string="measure">
			<behavior>
				<append>[$[file]]</append>
			</behavior>
		</completion>
	</set>

	
<!-- STRING -->

	<set name="parser3.core.string" symbol="method">

		<completion string="base64">
			<behavior>
				<append>[$[string]]</append>
			</behavior>
		</completion>
		<completion string="base64">
			<behavior>
				<append>[$[string];$.strict(true)]</append>
			</behavior>
		</completion>
		<completion string="idna">
			<behavior>
				<append>[$[string]]</append>
			</behavior>
		</completion>
		<completion string="js-unescape">
			<behavior>
				<append>[$[string]]</append>
			</behavior>
		</completion>
		<completion string="sql">
			<behavior>
				<append>{
	$[sql]
}</append>
			</behavior>
		</completion>
		<completion string="sql">
			<behavior>
				<append>{
	$[sql]
}[
	$.limit(1)
	$.offset($[offset count])
	$.default{$[code]}
	$.default[$[string]]
	$.default($[expression])
	$.bind[$[variables hash]]
]</append>
			</behavior>
		</completion>
		<completion string="unescape">
			<behavior>
				<append>[$[js or uri];$[string]] </append>
			</behavior>
		</completion>
		<completion string="unescape">
			<behavior>
				<append>[$[js or uri];$[string];
	$.charset[$[charset]]
] </append>
			</behavior>
		</completion>
	</set>


<!-- TABLE -->

	<set name="parser3.core.table" symbol="method">

<!-- table::create -->
		<completion string="create">
			<behavior>
				<append>{$[data]}</append>
			</behavior>
		</completion>

		<completion string="create">
			<behavior>
				<append>[nameless]{$[data]}</append>
			</behavior>
		</completion>

		<completion string="create">
			<behavior>
				<append>{
	$[data]
}[
	$.separator[$[separator symbol]]
	$.encloser[$[encloser symbol]]
]</append>
			</behavior>
		</completion>

		<completion string="create">
			<behavior>
				<append>[$[table]]</append>
			</behavior>
		</completion>

		<completion string="create">
			<behavior>
				<append>[$[table];
	$.offset($[count])
	$.offset[cur]
	$.limit($[maximum])
	$.reverse($[true/false])
]</append>
			</behavior>
		</completion>

<!-- table::load -->

		<completion string="load">
			<behavior>
				<append>[$[file]]</append>
			</behavior>
		</completion>
		<completion string="load">
			<behavior>
				<append>[$[file];
	$.separator[$[separator symbol]]
	$.encloser[$[encloser symbol]]
]</append>
			</behavior>
		</completion>
		<completion string="load">
			<behavior>
				<append>[nameless;$[file]]</append>
			</behavior>
		</completion>
		<completion string="load">
			<behavior>
				<append>[nameless;$[file];
	$.separator[$[separator symbol]]
	$.encloser[$[encloser symbol]]
]</append>
			</behavior>
		</completion>

<!-- table::sql -->
		<completion string="sql">
			<behavior>
				<append>{
	$[sql]
}</append>
			</behavior>
		</completion>
		<completion string="sql">
			<behavior>
				<append>{
	$[sql]
}[
	$.limit($[limit count])
	$.offset($[offset count])
	$.bind[$[variables hash]]
]</append>
			</behavior>
		</completion>
	</set>
	
<!-- TAINT -->

	<set name="parser3.core.taint.options" symbol="property">
		<completion string="as-is" />
		<completion string="file-spec" />
		<completion string="uri" />
		<completion string="http-header" />
		<completion string="mail-header" />
		<completion string="sql" />
		<completion string="js" />
		<completion string="json" />
		<completion string="parser-code" />
		<completion string="regex" />
		<completion string="xml" />
		<completion string="html" />
		<completion string="optimized-as-is" />
		<completion string="optimized-xml" />
		<completion string="optimized-html" />
	</set>

<!-- VOID -->
	
	<set name="parser3.core.void" symbol="method">
		<completion string="sql">
			<behavior>
				<append>{
	$[sql]
}</append>
			</behavior>
		</completion>
		<completion string="sql">
			<behavior>
				<append>{
	$[sql]
}[
	$.bind[$[variables hash]]
]</append>
			</behavior>
		</completion>
	</set>

<!-- OPERATORS -->

    <set name="parser3.core.functions" symbol="function">
<!-- A -->
        <completion string="apply-taint">
            <behavior>
                <append>[$[text]]</append>
            </behavior>
        </completion>
        <completion string="apply-taint">
            <behavior>
                <append>[$[type of transformation]][$[text]]</append>
            </behavior>
        </completion>
<!-- B -->
        <completion string="break">
            <behavior>
                <append>[]</append>
            </behavior>
        </completion>
        <completion string="break">
            <behavior>
                <append>($[expression])</append>
            </behavior>
        </completion>
<!-- C -->
        <completion string="cache">
            <behavior>
                <append>[]</append>
            </behavior>
        </completion>
        <completion string="cache">
            <behavior>
                <append>[$[file or date]]</append>
            </behavior>
        </completion>
        <completion string="cache">
            <behavior>
                <append>($[seconds])</append>
            </behavior>
        </completion>
        <completion string="cache">
            <behavior>
                <append>[$[file]]($[seconds])</append>
            </behavior>
        </completion>
        <completion string="cache">
            <behavior>
                <append>[$[file]]($[seconds]){$[code]}</append>
            </behavior>
        </completion>
        <completion string="cache">
            <behavior>
                <append>[$[file]]($[seconds]){$[code]}{$[exception handled]}</append>
            </behavior>
        </completion>
        <completion string="cache">
            <behavior>
                <append>[$[file]][$[date]]{$[code]}</append>
            </behavior>
        </completion>
        <completion string="cache">
            <behavior>
                <append>[$[file]][$[date]]{$[code]}{$[exception handled]}</append>
            </behavior>
        </completion>
       
        <completion string="connect">
            <behavior>
                <append>[$[connection string]]{$[code]}</append>
            </behavior>
        </completion>
        
        <completion string="continue">
            <behavior>
                <append>[]</append>
            </behavior>
        </completion>
        <completion string="continue">
            <behavior>
                <append>($[expression])</append>
            </behavior>
        </completion>
<!-- D -->
<!-- E -->
        <completion string="eval">
            <behavior>
                <append>($[expression])</append>
            </behavior>
        </completion>
        <completion string="eval">
            <behavior>
                <append>($[expression])[$[format string]]</append>
            </behavior>
        </completion>
<!-- F -->
        <completion string="for">
            <behavior>
                <append>[$[counter]]($[from];$[to]){$[code]}</append>
            </behavior>
        </completion>
        <completion string="for">
            <behavior>
                <append>[$[counter]]($[from];$[to]){$[code]}[$[string separator]]</append>
            </behavior>
        </completion>
        <completion string="for">
            <behavior>
                <append>[$[counter]]($[from];$[to]){$[code]}{$[code separator]}</append>
            </behavior>
        </completion>
	
<!-- G -->
<!-- H -->
<!-- I -->
        <completion string="if">
            <behavior>
                <append>($[expression]){$[code]}</append>
            </behavior>
        </completion>
<!-- J -->
<!-- K -->
<!-- L -->
<!-- M -->
<!-- N -->
<!-- O -->
<!-- P -->
        <completion string="process">
            <behavior>
                <append>{$[string]}</append>
            </behavior>
        </completion>
        <completion string="process">
            <behavior>
                <append>[$[context]]{$[string]}</append>
            </behavior>
        </completion>
        <completion string="process">
            <behavior>
                <append>[$[context]]{$[string]}[$[options]]</append>
            </behavior>
        </completion>
<!-- Q -->
<!-- R -->
        <completion string="rem">
            <behavior>
                <append>{$[comment]}</append>
            </behavior>
        </completion>
        
        <completion string="return">
            <behavior>
                <append>[]</append>
            </behavior>
        </completion>
        <completion string="return">
            <behavior>
                <append>[$[result]]</append>
            </behavior>
        </completion>

<!-- S -->
        <completion string="sleep">
            <behavior>
                <append>($[seconds])</append>
            </behavior>
        </completion>

        <completion string="switch">
            <behavior>
                <append>[$[string]]{$[code]}</append>
            </behavior>
        </completion>
        <completion string="switch">
            <behavior>
                <append>($[expression]){$[code]}</append>
            </behavior>
        </completion>
<!-- T -->
        <completion string="taint">
            <behavior>
                <append>[$[text]]</append>
            </behavior>
        </completion>
        <completion string="taint">
            <behavior>
                <append>[$[type of transformation]][$[text]]</append>
            </behavior>
        </completion>
        
        <completion string="throw">
            <behavior>
                <append>[$[type]]</append>
            </behavior>
        </completion>
        <completion string="throw">
            <behavior>
                <append>[$[type];$[source]]</append>
            </behavior>
        </completion>
        <completion string="throw">
            <behavior>
                <append>[$[type];$[source];$[comment]]</append>
            </behavior>
        </completion>
        <completion string="throw">
            <behavior>
                <append>[$[hash]]</append>
            </behavior>
        </completion>

        <completion string="try">
            <behavior>
                <append>{$[code]}{$[exception code]}</append>
            </behavior>
        </completion>
        <completion string="try">
            <behavior>
                <append>{$[code]}{$[exception code]}{$[code]}</append>
            </behavior>
        </completion>

<!-- U -->
        <completion string="untaint">
            <behavior>
                <append>{$[code]}</append>
            </behavior>
        </completion>
        <completion string="untaint">
            <behavior>
                <append>[$[type of transformation]]{$[code]}</append>
            </behavior>
        </completion>

        <completion string="use">
            <behavior>
                <append>[$[file]]</append>
            </behavior>
        </completion>
        <completion string="use">
            <behavior>
                <append>[$[file];$[options]]</append>
            </behavior>
        </completion>
<!-- V -->
<!-- W -->
        <completion string="while">
            <behavior>
                <append>($[expression]){$[code]}</append>
            </behavior>
        </completion>
        <completion string="while">
            <behavior>
                <append>($[expression]){$[code]}[$[string separator]]</append>
            </behavior>
        </completion>
        <completion string="while">
            <behavior>
                <append>($[expression]){$[code]}{$[code separator]}</append>
            </behavior>
        </completion>
<!-- X -->
<!-- Y -->
<!-- Z -->
    </set>
    
</completions>
