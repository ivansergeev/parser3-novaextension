<?xml version="1.0" encoding="UTF-8"?>
<completions>
   
    <!-- <provider>
        <selector>parser3</selector>
        <expression>\b[a-zA-Z0-9-_]*</expression>
        <set>parser3.entities</set>
    </provider> -->
    
    <provider name="identifier">
        <syntax>parser3</syntax>
        <selector>*:not(string,comment)</selector>
<!--
        <expression>(?&lt;!\.)(?&lt;!def\s)\b[a-zA-Z_][a-zA-Z0-9_]*</expression>
        
        <symbols type="class">
            <behavior prefix="=\s*">
                <append>($[])</append>
            </behavior>
        </symbols>
        <symbols type="function">
            <behavior>
                <arguments prefix="(" suffix=")" separator=", " />
            </behavior>
        </symbols>
        <symbols type="constant,variable,argument,package" />
 -->        
        <!-- <set>parser3.keywords</set> -->
        <set>parser3.values.core</set>
        <!-- <set>parser3.functions.core</set> -->
        <!-- <set>parser3.exceptions.core</set> -->
    </provider>
    
    <!-- "$foo" -->
    <provider name="variable">
        <syntax>parser3</syntax>
        <selector>*:not(comment)</selector>
        <expression>(?&lt;!\-&gt;)(\$([a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff]*)?)</expression>
        <symbols type="variable,argument,constant" />
        <set>parser3.core.variables</set>
    </provider>

    <!-- "foo" -->
    <provider name="function">
        <syntax>parser3</syntax>
        <selector>*:not(string,comment)</selector>
        <!-- <expression>(?&lt;!\-&gt;|\$)(\b[a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff]*)</expression> -->
        <expression>(\^[a-zA-Z0-9_\x7f-\xff]+)</expression>
        
        <symbols type="function">
            <behavior>
                <arguments prefix="[" suffix="]" separator="; " />
            </behavior>
        </symbols>

        <symbols type="class,protocol" />
        
        <set>parser3.keywords</set>
        <set>parser3.core.functions</set>
    </provider>
    
    <!-- Entities -->
	<!--
    <set name="parser3.entities">
        <completion string="&quot;" />
        <completion string="&amp;" />
        <completion string="&apos;" />
        <completion string="&lt;" />
        <completion string="&gt;" />
    </set>
	-->

    <!-- Built-in values -->
    <set name="parser3.values.core" symbol="constant">
        <completion string="true" />
        <completion string="false" />
    </set>
    
    <set name="parser3.core.variables" symbol="variable">
        <completion string="$MAIN" />
        <completion string="$LIMITS" />
        <completion string="$MAIL" />
        <completion string="$SQL" />
        <completion string="$MIME-TYPES" />
    </set>
    
    <set name="parser3.keywords" symbol="statement">
        <completion string="and" />
        <completion string="break" />
        <completion string="case" />
        <completion string="else" />
        <completion string="for" />
        <completion string="foreach" />
        <completion string="if" />
        <completion string="eq" />
        <completion string="ne" />
        <completion string="def" />
        <completion string="is" />
        <completion string="in" />
        <completion string="lt" />
        <completion string="qt" />
        <completion string="le" />
        <completion string="qe" />
        <completion string="-f" />
        <completion string="-d" />
        <completion string="result" />
        <completion string="static" />
        <completion string="switch" />
        <completion string="throw" />
        <completion string="try" />
        <completion string="use" />
        <completion string="while" />
    </set>


    <set name="parser3.core.functions">
<!-- A -->
        <completion string="^apply-taint">
            <behavior symbol="function">
                <append>[$[text]]</append>
            </behavior>
        </completion>
        <completion string="^apply-taint">
            <behavior symbol="function">
                <append>[$[type of transformation]][$[text]]</append>
            </behavior>
        </completion>
<!-- B -->
        <completion string="^break">
            <behavior symbol="function">
                <append>[]</append>
            </behavior>
        </completion>
        <completion string="^break">
            <behavior symbol="function">
                <append>($[expression])</append>
            </behavior>
        </completion>
<!-- C -->
        <completion string="^cache">
            <behavior symbol="function">
                <append>[]</append>
            </behavior>
        </completion>
        <completion string="^cache">
            <behavior symbol="function">
                <append>[$[file or date]]</append>
            </behavior>
        </completion>
        <completion string="^cache">
            <behavior symbol="function">
                <append>($[seconds])</append>
            </behavior>
        </completion>
        <completion string="^cache">
            <behavior symbol="function">
                <append>[$[file]]($[seconds])</append>
            </behavior>
        </completion>
        <completion string="^cache">
            <behavior symbol="function">
                <append>[$[file]]($[seconds]){$[code]}</append>
            </behavior>
        </completion>
        <completion string="^cache">
            <behavior symbol="function">
                <append>[$[file]]($[seconds]){$[code]}{$[exception handled]}</append>
            </behavior>
        </completion>
        <completion string="^cache">
            <behavior symbol="function">
                <append>[$[file]][$[date]]{$[code]}</append>
            </behavior>
        </completion>
        <completion string="^cache">
            <behavior symbol="function">
                <append>[$[file]][$[date]]{$[code]}{$[exception handled]}</append>
            </behavior>
        </completion>
       
        <completion string="^connect">
            <behavior symbol="function">
                <append>[$[connection string]]{$[code]}</append>
            </behavior>
        </completion>
        
        <completion string="^continue">
            <behavior symbol="function">
                <append>[]</append>
            </behavior>
        </completion>
        <completion string="^continue">
            <behavior symbol="function">
                <append>($[expression])</append>
            </behavior>
        </completion>
<!-- D -->
<!-- E -->
        <completion string="^eval">
            <behavior symbol="function">
                <append>($[expression])</append>
            </behavior>
        </completion>
        <completion string="^eval">
            <behavior symbol="function">
                <append>($[expression])[$[format string]]</append>
            </behavior>
        </completion>
<!-- F -->
        <completion string="^for">
            <behavior symbol="function">
                <append>[$[counter]]($[from];$[to]){$[code]}</append>
            </behavior>
        </completion>
        <completion string="^for">
            <behavior symbol="function">
                <append>[$[counter]]($[from];$[to]){$[code]}[$[string separator]]</append>
            </behavior>
        </completion>
        <completion string="^for">
            <behavior symbol="function">
                <append>[$[counter]]($[from];$[to]){$[code]}{$[code separator]}</append>
            </behavior>
        </completion>
<!-- G -->
<!-- H -->
<!-- I -->
        <completion string="^if">
            <behavior symbol="function">
                <append>($[expression]){$[code]}</append>
            </behavior>
        </completion>
<!-- J -->
<!-- K -->
<!-- L -->
<!-- M -->
<!-- N -->
<!-- O -->
<!-- P -->
        <completion string="^process">
            <behavior symbol="function">
                <append>{$[string]}</append>
            </behavior>
        </completion>
        <completion string="^process">
            <behavior symbol="function">
                <append>[$[context]]{$[string]}</append>
            </behavior>
        </completion>
        <completion string="^process">
            <behavior symbol="function">
                <append>[$[context]]{$[string]}[$[options]]</append>
            </behavior>
        </completion>
       
<!-- Q -->
<!-- R -->
        <completion string="^rem">
            <behavior symbol="function">
                <append>{$[comment]}</append>
            </behavior>
        </completion>
        
        <completion string="^return">
            <behavior symbol="function">
                <append>[]</append>
            </behavior>
        </completion>
        <completion string="^return">
            <behavior symbol="function">
                <append>[$[result]]</append>
            </behavior>
        </completion>

<!-- S -->
        <completion string="^sleep">
            <behavior symbol="function">
                <append>($[seconds])</append>
            </behavior>
        </completion>

        <completion string="^switch">
            <behavior symbol="function">
                <append>[$[string]]{$[code]}</append>
            </behavior>
        </completion>
        <completion string="^switch">
            <behavior symbol="function">
                <append>($[expression]){$[code]}</append>
            </behavior>
        </completion>
<!-- T -->
        <completion string="^taint">
            <behavior symbol="function">
                <append>[$[text]]</append>
            </behavior>
        </completion>
        <completion string="^taint">
            <behavior symbol="function">
                <append>[$[type of transformation]][$[text]]</append>
            </behavior>
        </completion>
        
        <completion string="^throw">
            <behavior symbol="function">
                <append>[$[type]]</append>
            </behavior>
        </completion>
        <completion string="^throw">
            <behavior symbol="function">
                <append>[$[type];$[source]]</append>
            </behavior>
        </completion>
        <completion string="^throw">
            <behavior symbol="function">
                <append>[$[type];$[source];$[comment]]</append>
            </behavior>
        </completion>
        <completion string="^throw">
            <behavior symbol="function">
                <append>[$[hash]]</append>
            </behavior>
        </completion>

        <completion string="^try">
            <behavior symbol="function">
                <append>{$[code]}{$[exception code]}</append>
            </behavior>
        </completion>
        <completion string="^try">
            <behavior symbol="function">
                <append>{$[code]}{$[exception code]}{$[code]}</append>
            </behavior>
        </completion>

<!-- U -->
        <completion string="^untaint">
            <behavior symbol="function">
                <append>{$[code]}</append>
            </behavior>
        </completion>
        <completion string="^untaint">
            <behavior symbol="function">
                <append>[$[type of transformation]]{$[code]}</append>
            </behavior>
        </completion>
       
       
        <completion string="^use">
            <behavior symbol="function">
                <append>[$[file]]</append>
            </behavior>
        </completion>
        <completion string="^use">
            <behavior symbol="function">
                <append>[$[file];$[options]]</append>
            </behavior>
        </completion>
<!-- V -->
<!-- W -->
        <completion string="^while">
            <behavior symbol="function">
                <append>($[expression]){$[code]}</append>
            </behavior>
        </completion>
        <completion string="^while">
            <behavior symbol="function">
                <append>($[expression]){$[code]}[$[string separator]]</append>
            </behavior>
        </completion>
        <completion string="^while">
            <behavior symbol="function">
                <append>($[expression]){$[code]}{$[code separator]}</append>
            </behavior>
        </completion>
<!-- X -->
<!-- Y -->
<!-- Z -->
 
       
    </set>
    
</completions>
