<?xml version="1.0" encoding="UTF-8"?>
<completions>
   
    <!-- <provider>
        <selector>parser3</selector>
        <expression>\b[a-zA-Z0-9-_]*</expression>
        <set>parser3.entities</set>
    </provider> -->
    
	<!-- "true|false" -->	
    <provider name="constant">
        <syntax>parser3</syntax>
        <selector>*:not(string,comment)</selector>
        <expression>([a-z]+)</expression>
        <symbols type="constant" />
        <set>parser3.core.values</set>
        <set>parser3.core.operator.logic</set>
    </provider>
	
	<!-- "error types" -->	
    <provider name="error.types">
        <syntax>parser3</syntax>
        <selector>*:not(string,comment)</selector>
        <expression>([a-z]+)</expression>
        <symbols type="constant" />
        <set>parser3.keywords.error.types</set>
    </provider>
	
	<!-- "@foo" -->	
    <provider name="core.method">
        <syntax>parser3</syntax>
        <selector>*:not(string,comment)</selector>
        <expression>^\@([a-zA-Z_]+)</expression>
        <symbols type="method" />
        <set>parser3.core.method</set>
    </provider>

    <!-- "$foo" -->
    <provider name="variable">
        <syntax>parser3</syntax>
        <selector>*:not(comment)</selector>
        <expression>(?&lt;!\-&gt;)(\$([a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff]*)?)</expression>
        <symbols type="variable,argument,constant" />
        <set>parser3.core.variables</set>
    </provider>

    <!-- "foo" -->
    <provider name="function">
        <syntax>parser3</syntax>
        <selector>*:not(string,comment)</selector>
        <expression>(\^[a-zA-Z0-9_\x7f-\xff]+)</expression>

        <symbols type="function">
            <behavior>
                <arguments prefix="[" suffix="]" separator=";" />
            </behavior>
        </symbols>

        <symbols type="class,protocol" />

        <set>parser3.keywords</set>
        <set>parser3.core.functions</set>
    </provider>
	
	
<!-- "^classes" -->
    <provider name="classes">
        <syntax>parser3</syntax>
        <selector>*:not(string,comment)</selector>
        <expression>(\^[a-zA-Z0-9_\x7f-\xff]+)</expression>
        <symbols type="class" />
        <set>parser3.core.classes</set>
    </provider>
    
<!-- "$classes" -->
    <provider name="classes.static">
        <syntax>parser3</syntax>
        <selector>*:not(string,comment)</selector>
        <expression>(\$[a-zA-Z0-9_\x7f-\xff]+)</expression>
        <symbols type="class" />
        <set>parser3.core.classes.static</set>
    </provider>

<!-- ^date -->

    <provider name="date">
        <syntax>parser3</syntax>
        <selector>*:not(string,comment)</selector>
        <expression>(\^date)((\:|\:\:|\.)[a-zA-Z0-9_\x7f-\xff]+)</expression>
        <symbols type="method" />
        <set>parser3.core.date</set>
    </provider>

<!-- ^double -->

    <provider name="double">
        <syntax>parser3</syntax>
        <selector>*:not(string,comment)</selector>
        <expression>(\^double)(\:[a-zA-Z0-9_\x7f-\xff]+)</expression>
        <symbols type="property" />
        <set>parser3.core.double</set>
    </provider>

<!-- ^int -->

    <provider name="int">
        <syntax>parser3</syntax>
        <selector>*:not(string,comment)</selector>
        <expression>(\^int)(\:[a-zA-Z0-9_\x7f-\xff]+)</expression>
        <symbols type="property" />
        <set>parser3.core.int</set>
    </provider>

<!-- $env -->

    <provider name="env">
        <syntax>parser3</syntax>
        <selector>*:not(string,comment)</selector>
        <expression>([\$\^]env)(\:[a-zA-Z0-9_\x7f-\xff]+)</expression>
        <symbols type="property" />
        <set>parser3.core.env</set>
    </provider>

<!-- $console -->

    <provider name="console">
        <syntax>parser3</syntax>
        <selector>*:not(string,comment)</selector>
        <expression>(\$console)(\:[a-zA-Z0-9_\x7f-\xff]+)</expression>
        <symbols type="property" />
        <set>parser3.core.console.static</set>
    </provider>

<!-- "$cookie" -->

    <provider name="cookie">
        <syntax>parser3</syntax>
        <selector>*:not(string,comment)</selector>
        <expression>([\^\$]cookie)(\:[a-zA-Z0-9_\x7f-\xff]+)</expression>
        <symbols type="property" />
        <set>parser3.core.cookie</set>
    </provider>
    
	<!-- <provider name="cookie.static">
        <syntax>parser3</syntax>
        <selector>*:not(string,comment)</selector>
        <expression>(\$cookie)(\:[a-zA-Z0-9_\x7f-\xff]+)</expression>
        <symbols type="property" />
        <set>parser3.core.cookie.static</set>
    </provider> -->
   
<!-- "^curl" -->
    <provider name="curl">
        <syntax>parser3</syntax>
        <selector>*:not(string,comment)</selector>
        <expression>(\^curl)(\:[a-zA-Z0-9_\x7f-\xff]+)</expression>
        <symbols type="method" />
        <set>parser3.core.curl</set>
    </provider>

    <!-- "curl options" -->
    <!-- 
		<provider name="curl-options">
        <syntax>parser3</syntax>
        <selector>parser3.block.curl-options</selector>
        <expression>(\$\.[a-zA-Z0-9_\x7f-\xff]+)</expression>
        <symbols type="property" />
        <set>parser3.core.curl.options</set>
    </provider> 
	-->
	
<!-- "^file:" -->
	<provider name="file">
		<syntax>parser3</syntax>
		<selector>*:not(string,comment)</selector>
		<expression>(\^file)((\:|\:\:|\.)[a-zA-Z0-9_\x7f-\xff]+)</expression>
		<symbols type="method" />
		<set>parser3.core.file</set>
	</provider>

<!-- "^form:" -->
	<provider name="form">
		<syntax>parser3</syntax>
		<selector>*:not(string,comment)</selector>
		<expression>([\^\$]form)(\:[a-zA-Z0-9_\x7f-\xff]+)</expression>
		<symbols type="method" />
		<set>parser3.core.form</set>
	</provider>
	
<!-- "$form:" -->
	<!-- <provider name="form.static">
		<syntax>parser3</syntax>
		<selector>*:not(string,comment)</selector>
		<expression>(\$form)(\:[a-zA-Z0-9_\x7f-\xff]+)</expression>
		<symbols type="property" />
		<set>parser3.core.form.static</set>
	</provider> -->
	
	<!-- "^string" -->
	<provider name="string">
		<syntax>parser3</syntax>
		<selector>*:not(string,comment)</selector>
		<expression>(\^string)(\:[a-zA-Z0-9_\x7f-\xff]+)</expression>
		<symbols type="method" />
		<set>parser3.core.string</set>
	</provider>

<!-- "^taint" -->
	<provider name="taint-options">
		<syntax>parser3</syntax>
		<selector>parser3.block.taint.options</selector>
		<expression>([a-z\-]+)</expression>
		<symbols type="property" />
		<set>parser3.core.taint.options</set>
	</provider> 
	
	<!-- "^table" -->
	<provider name="table">
		<syntax>parser3</syntax>
		<selector>*:not(string,comment)</selector>
		<expression>(\^table)(\:\:[a-zA-Z0-9_\x7f-\xff]+)</expression>
		<symbols type="method" />
		<set>parser3.core.table</set>
	</provider>

	<!-- "^void" -->
	<provider name="void">
		<syntax>parser3</syntax>
		<selector>*:not(string,comment)</selector>
		<expression>(\^void)(\:[a-zA-Z0-9_\x7f-\xff]+)</expression>
		<symbols type="method" />
		<set>parser3.core.void</set>
	</provider>

<!-- ------------------------------------------------------------------ -->

    <!-- Built-in values -->
    <set name="parser3.core.values" symbol="constant">
        <completion string="true" />
        <completion string="false" />
    </set>
   
    <set name="parser3.core.operator.logic" symbol="constant">
        <completion string="eq" />
        <completion string="ne" />
        <completion string="is" />
        <completion string="in" />
        <completion string="lt" />
        <completion string="qt" />
        <completion string="le" />
        <completion string="ge" />
        <completion string="-d" />
        <completion string="-f" />
    </set>
    
    <set name="parser3.core.variables" symbol="variable">
        <completion string="$MAIN" />
        <completion string="$LIMITS" />
        <completion string="$MAIL" />
        <completion string="$SQL" />
        <completion string="$MIME-TYPES" />
    </set>
    
	<set name="parser3.core.method" symbol="method">
		<completion string="@auto">
			<behavior>
				<append>[]
$[]</append>
			</behavior>
		</completion>
		<completion string="@BASE">
			<behavior>
				<append>
$[]</append>
			</behavior>
		</completion>
		<completion string="@CLASS">
			<behavior>
				<append>
$[]</append>
			</behavior>
		</completion>
		<completion string="@create">
			<behavior>
				<append>[]
$[]</append>
			</behavior>
		</completion>
		<completion string="@main">
			<behavior>
				<append>[]
$[]</append>
			</behavior>
		</completion>
		<completion string="@postprocess">
			<behavior>
				<append>[body]
$[]</append>
			</behavior>
		</completion>
		<completion string="@OPTIONS">
			<behavior>
				<append>
$[]</append>
			</behavior>
		</completion>
		<completion string="@static">
			<behavior>
				<append>:$[name][]</append>
			</behavior>
		</completion>
		<completion string="@USE">
			<behavior>
				<append>
$[]</append>
			</behavior>
		</completion>
		<completion string="@unhandled_exception">
			<behavior>
				<append>[exception;stack]
$[]</append>
			</behavior>
		</completion>
	</set>
	
    <set name="parser3.keywords" symbol="statement">
        <completion string="break" />
        <completion string="case" />
        <completion string="else" />
        <completion string="for" />
        <completion string="foreach" />
        <completion string="result" />
        <completion string="static" />
        <completion string="switch" />
        <completion string="throw" />
        <completion string="try" />
        <completion string="use" />
        <completion string="while" />
    </set>
	
	<set name="parser3.keywords.types" symbol="constant">
		<completion string="date" />
		<completion string="hash" />
		<completion string="junction" />
		<completion string="file" />
		<completion string="string" />
		<completion string="table" />
	</set>
	
	<set name="parser3.keywords.error.types" symbol="constant">
		<completion string="parser.compile" />
		<completion string="parser.runtime" />
		<completion string="parser.interrupted" />
		<completion string="number.zerodivision " />
		<completion string="number.format" />
		<completion string="file.missing" />
		<completion string="file.access" />
		<completion string="file.read" />
		<completion string="file.execute" />
		<completion string="date.range" />
		<completion string="pcre.execute" />
		<completion string="image.format" />
		<completion string="sql.connect" />
		<completion string="sql.execute" />
		<completion string="xml" />
		<completion string="smtp.connect" />
		<completion string="smtp.execute" />
		<completion string="email.format" />
		<completion string="email.send" />
		<completion string="http.host" />
		<completion string="http.connect" />
		<completion string="http.response" />
		<completion string="http.status" />
		<completion string="http.timeout" />
		<completion string="curl.host" />
		<completion string="curl.connect" />
		<completion string="curl.status" />
		<completion string="curl.ssl" />
		<completion string="curl.timeout" />
		<completion string="curl.fail" />
	</set>



<!-- ^CLASSES -->

	<set name="parser3.core.classes">
		<completion string="^cookie">
			<behavior symbol="class">
				<append>:</append>
			</behavior>
		</completion>
		<completion string="^curl">
			<behavior symbol="class">
				<append>:</append>
			</behavior>
		</completion>
		<completion string="^date">
			<behavior symbol="class" />
		</completion>
		<completion string="^double">
			<behavior symbol="class">
				<append>:</append>
			</behavior>
		</completion>
		<completion string="^int">
			<behavior symbol="class">
				<append>:</append>
			</behavior>
		</completion>
		<completion string="^env">
			<behavior symbol="class">
				<append>:</append>
			</behavior>
		</completion>
		<completion string="^file">
			<behavior symbol="class" />
		</completion>
		<completion string="^form">
			<behavior symbol="class">
				<append>:</append>
			</behavior>
		</completion>
		<completion string="^string">
			<behavior symbol="class">
				<append>:</append>
			</behavior>
		</completion>
		<completion string="^table">
			<behavior symbol="class">
				<append>::</append>
			</behavior>
		</completion>
		<completion string="^void">
			<behavior symbol="class">
				<append>:</append>
			</behavior>
		</completion>
	</set>

	<!-- $CLASSES -->
		
	<set name="parser3.core.classes.static">
		<completion string="$console">
			<behavior symbol="class">
				<append>:</append>
			</behavior>
		</completion>
		<completion string="$cookie">
			<behavior symbol="class">
				<append>:</append>
			</behavior>
		</completion>
		<completion string="$env">
			<behavior symbol="class">
				<append>:</append>
			</behavior>
		</completion>
		<completion string="$form">
			<behavior symbol="class">
				<append>:</append>
			</behavior>
		</completion>
		<completion string="$math">
			<behavior symbol="class">
				<append>:</append>
			</behavior>
		</completion>
		<completion string="$request">
			<behavior symbol="class">
				<append>:</append>
			</behavior>
		</completion>
		<completion string="$response">
			<behavior symbol="class">
				<append>:</append>
			</behavior>
		</completion>
	</set>

<!-- ^DATE -->
	
	<set name="parser3.core.date">
		<completion string="^date::create" symbol="method">
			<behavior>
				<append>[$[]]</append>
			</behavior>
		</completion>
		<completion string="^date::now" symbol="method">
			<behavior>
				<append>[]</append>
			</behavior>
		</completion>
		<completion string="^date::now" symbol="method">
			<behavior>
				<append>[$[roll]]</append>
			</behavior>
		</completion>
		<completion string="^date::today" symbol="method">
			<behavior>
				<append>[]</append>
			</behavior>
		</completion>
		<completion string="^date::unix-timestamp" symbol="method">
			<behavior>
				<append>($[timestamp])</append>
			</behavior>
		</completion>
		<completion string="^date.gmt-string" symbol="method">
			<behavior>
				<append>[]</append>
			</behavior>
		</completion>
		<completion string="^date.iso-string" symbol="method">
			<behavior>
				<append>[]</append>
			</behavior>
		</completion>
		<completion string="^date.iso-string" symbol="method">
			<behavior>
				<append>[
	$.colon($[true/false])
	$.ms($[false/false])
	$.z($[false/true])
]</append>
			</behavior>
		</completion>
		<completion string="^date.last-day" symbol="method">
			<behavior>
				<append>[]</append>
			</behavior>
		</completion>
		<completion string="^date.roll" symbol="method">
			<behavior>
				<append>[$[year|month|day]]($[value])</append>
			</behavior>
		</completion>
		<completion string="^date.roll" symbol="method">
			<behavior>
				<append>[TZ][$[new timezone]]</append>
			</behavior>
		</completion>
		<completion string="^date.sql-string" symbol="method">
			<behavior>
				<append>[]</append>
			</behavior>
		</completion>
		<completion string="^date.sql-string" symbol="method">
			<behavior>
				<append>[$[datetime|date|time]]</append>
			</behavior>
		</completion>
		<completion string="^date.unix-timestamp" symbol="method">
			<behavior>
				<append>[]</append>
			</behavior>
		</completion>
		<completion string="^date:calendar" symbol="method">
			<behavior>
				<append>[$[rus|eng]]($[year];$[month])</append>
			</behavior>
		</completion>
		<completion string="^date:calendar" symbol="method">
			<behavior>
				<append>[$[rus|eng]]($[year];$[month];$[day])</append>
			</behavior>
		</completion>
		<completion string="^date:last-day" symbol="method">
			<behavior>
				<append>($[year];$[month])</append>
			</behavior>
		</completion>
		<completion string="^date:roll" symbol="method">
			<behavior>
				<append>[TZ][$[default timezone]]</append>
			</behavior>
		</completion>
	</set>

<!-- ^DOUBLE -->
	
	<set name="parser3.core.double">
		<completion string="^double:sql" symbol="method">
			<behavior>
				<append>{$[]}</append>
			</behavior>
		</completion>
		<completion string="^double:sql" symbol="method">
			<behavior>
				<append>{
	$[sql]
}[
	$.limit(1)
	$.offset($[value])
	$.default{$[code]}
	$.default($[expression])
]</append>
			</behavior>
		</completion>
	</set>

<!-- ^INT -->
	
	<set name="parser3.core.int">
		<completion string="^int:sql" symbol="method">
			<behavior>
				<append>{$[]}</append>
			</behavior>
		</completion>
		<completion string="^int:sql" symbol="method">
			<behavior>
				<append>{
	$[sql]
}[
	$.limit(1)
	$.offset($[value])
	$.default{$[code]}
	$.default($[expression])
]</append>
			</behavior>
		</completion>
	</set>

<!-- $ENV -->
	
	<set name="parser3.core.env">
		<completion string="$env:fields" symbol="property"/>
		<completion string="^env:fields" symbol="property">
			<behavior>
				<append>.</append>
			</behavior>
		</completion>
		<completion string="$env:PARSER_VERSION" symbol="property"/>
		<completion string="$env:REMOTE_ADDR" symbol="property"/>
		<completion string="$env:HTTP_USER_AGENT" symbol="property"/>
		<completion string="$env:HTTP_" symbol="property">
			<behavior>
				<append>$[]</append>
			</behavior>
		</completion>
	</set>

<!-- CONSOLE -->

	<set name="parser3.core.console.static" >
		<completion string="$console:line" symbol="property"/>
		<completion string="$console:line" symbol="method">
			<behavior>
				<append>[$[text]]</append>
			</behavior>
		</completion>
	</set>

<!-- COOKIE -->

	<set name="parser3.core.cookie" symbol="property">
		<completion string="^cookie:fields">
			<behavior symbol="property">
				<append>.</append>
			</behavior>
		</completion>
		<completion string="$cookie:fields" />
	</set>

<!-- CURL -->

	<set name="parser3.core.curl">
<!-- info -->	
		<completion string="^curl:info">
			<behavior symbol="method">
				<append>[]</append>
			</behavior>
		</completion>
		<completion string="^curl:info">
			<behavior symbol="method">
				<append>[$[name]]</append>
			</behavior>
		</completion>
		
<!-- load -->	
		<completion string="^curl:load">
			<behavior symbol="method">
				<append>[]</append>
			</behavior>
		</completion>
		<completion string="^curl:load">
			<behavior symbol="method">
				<append>[$[options]]</append>
			</behavior>
		</completion>
<!-- options -->	
		<completion string="^curl:options">
			<behavior symbol="method">
				<append>[$[options]]</append>
			</behavior>
		</completion>
<!-- session -->	
		<completion string="^curl:session">
			<behavior symbol="method">
				<append>{$[code]}</append>
			</behavior>
		</completion>
<!-- version -->	
		<completion string="^curl:version">
			<behavior symbol="method">
				<append>[]</append>
			</behavior>
		</completion>
	</set>

	<!-- CURL OPTIONS -->
<!--		
	<set name="parser3.core.curl.options">
		<completion string="$.charset">
			<behavior symbol="property">
				<append>[]</append>
			</behavior>
		</completion>
		<completion string="$.content-type">
			<behavior symbol="property">
				<append>[]</append>
			</behavior>
		</completion>
		<completion string="$.library">
			<behavior symbol="property">
				<append>[$[path]]</append>
			</behavior>
		</completion>
		<completion string="$.mode">
			<behavior symbol="property">
				<append>[$[text or binary]]</append>
			</behavior>
		</completion>
		<completion string="$.name">
			<behavior symbol="property">
				<append>[]</append>
			</behavior>
		</completion>
		<completion string="$.response-charset">
			<behavior symbol="property">
				<append>[]</append>
			</behavior>
		</completion>
		<completion string="$.timeout">
			<behavior symbol="property">
				<append>()</append>
			</behavior>
		</completion>
	</set>
-->

<!-- FILE -->
	
	<set name="parser3.core.file" symbol="property">
		<!-- todo -->
	</set>

<!-- FORM -->
	
	<set name="parser3.core.form" symbol="property">
		<completion string="^form:fields">
			<behavior symbol="property">
				<append>.</append>
			</behavior>
		</completion>
		<completion string="^form:files">
			<behavior symbol="property">
				<append>.</append>
			</behavior>
		</completion>
		<completion string="$form:fields" />
		<completion string="$form:files" />
		<completion string="$form:imap" />
		<completion string="$form:qtail" />
		<completion string="$form:tables" />
	</set>


<!-- STRING -->

	<set name="parser3.core.string">

		<completion string="^string:base64">
			<behavior symbol="method">
				<append>[$[string]]</append>
			</behavior>
		</completion>
		<completion string="^string:base64">
			<behavior symbol="method">
				<append>[$[string];$.strict(true)]</append>
			</behavior>
		</completion>
		<completion string="^string:idna">
			<behavior symbol="method">
				<append>[$[string]]</append>
			</behavior>
		</completion>
		<completion string="^string:js-unescape">
			<behavior symbol="method">
				<append>[$[string]]</append>
			</behavior>
		</completion>
		<completion string="^string:sql">
			<behavior symbol="method">
				<append>{
	$[sql]
}</append>
			</behavior>
		</completion>
		<completion string="^string:sql">
			<behavior symbol="method">
				<append>{
	$[sql]
}[
	$.limit(1)
	$.offset($[offset count])
	$.default{$[code]}
	$.default[$[string]]
	$.default($[expression])
	$.bind[$[variables hash]]
]</append>
			</behavior>
		</completion>
		<completion string="^string:unescape">
			<behavior symbol="method">
				<append>[$[js or uri];$[string]] </append>
			</behavior>
		</completion>
		<completion string="^string:unescape">
			<behavior symbol="method">
				<append>[$[js or uri];$[string];
	$.charset[$[charset]]
] </append>
			</behavior>
		</completion>
	</set>
	
	
<!-- TABLE -->

	<set name="parser3.core.table">

<!-- table::create -->
		<completion string="^table::create">
			<behavior symbol="method">
				<append>{$[data]}</append>
			</behavior>
		</completion>

		<completion string="^table::create">
			<behavior symbol="method">
				<append>[nameless]{$[data]}</append>
			</behavior>
		</completion>

		<completion string="^table::create">
			<behavior symbol="method">
				<append>{
	$[data]
}[
	$.separator[$[separator symbol]]
	$.encloser[$[encloser symbol]]
]</append>
			</behavior>
		</completion>

		<completion string="^table::create">
			<behavior symbol="method">
				<append>[$[table]]</append>
			</behavior>
		</completion>

		<completion string="^table::create">
			<behavior symbol="method">
				<append>[$[table];
	$.offset($[count])
	$.offset[cur]
	$.limit($[maximum])
	$.reverse($[true/false])
]</append>
			</behavior>
		</completion>

<!-- table::load -->

		<completion string="^table::load">
			<behavior symbol="method">
				<append>[$[file]]</append>
			</behavior>
		</completion>
		<completion string="^table::load">
			<behavior symbol="method">
				<append>[$[file];
	$.separator[$[separator symbol]]
	$.encloser[$[encloser symbol]]
]</append>
			</behavior>
		</completion>
		<completion string="^table::load">
			<behavior symbol="method">
				<append>[nameless;$[file]]</append>
			</behavior>
		</completion>
		<completion string="^table::load">
			<behavior symbol="method">
				<append>[nameless;$[file];
	$.separator[$[separator symbol]]
	$.encloser[$[encloser symbol]]
]</append>
			</behavior>
		</completion>

<!-- table::sql -->
		<completion string="^table::sql">
			<behavior symbol="method">
				<append>{$[sql]}</append>
			</behavior>
		</completion>
		<completion string="^table::sql">
			<behavior symbol="method">
				<append>{
	$[sql]
}[
	$.limit($[limit count])
	$.offset($[offset count])
	$.bind[$[variables hash]]
]</append>
			</behavior>
		</completion>
	</set>
	
<!-- TAINT -->
	<set name="parser3.core.taint.options" symbol="property">
		<completion string="as-is" />
		<completion string="file-spec" />
		<completion string="uri" />
		<completion string="http-header" />
		<completion string="mail-header" />
		<completion string="sql" />
		<completion string="js" />
		<completion string="json" />
		<completion string="parser-code" />
		<completion string="regex" />
		<completion string="xml" />
		<completion string="html" />
		<completion string="optimized-as-is" />
		<completion string="optimized-xml" />
		<completion string="optimized-html" />
	</set>

<!-- VOID -->
	
		<set name="parser3.core.void">
	
<!-- void:sql -->
			<completion string="^void:sql">
				<behavior symbol="method">
					<append>{$[sql]}</append>
				</behavior>
			</completion>

<!-- void:sql -->
			<completion string="^void:sql">
				<behavior symbol="method">
					<append>{
	$[sql]
}[
	$.bind[$[variables hash]]
]</append>
				</behavior>
			</completion>
		</set>


    <set name="parser3.core.functions">
<!-- A -->
        <completion string="^apply-taint">
            <behavior symbol="function">
                <append>[$[text]]</append>
            </behavior>
        </completion>
        <completion string="^apply-taint">
            <behavior symbol="function">
                <append>[$[type of transformation]][$[text]]</append>
            </behavior>
        </completion>
<!-- B -->
        <completion string="^break">
            <behavior symbol="function">
                <append>[]</append>
            </behavior>
        </completion>
        <completion string="^break">
            <behavior symbol="function">
                <append>($[expression])</append>
            </behavior>
        </completion>
<!-- C -->
        <completion string="^cache">
            <behavior symbol="function">
                <append>[]</append>
            </behavior>
        </completion>
        <completion string="^cache">
            <behavior symbol="function">
                <append>[$[file or date]]</append>
            </behavior>
        </completion>
        <completion string="^cache">
            <behavior symbol="function">
                <append>($[seconds])</append>
            </behavior>
        </completion>
        <completion string="^cache">
            <behavior symbol="function">
                <append>[$[file]]($[seconds])</append>
            </behavior>
        </completion>
        <completion string="^cache">
            <behavior symbol="function">
                <append>[$[file]]($[seconds]){$[code]}</append>
            </behavior>
        </completion>
        <completion string="^cache">
            <behavior symbol="function">
                <append>[$[file]]($[seconds]){$[code]}{$[exception handled]}</append>
            </behavior>
        </completion>
        <completion string="^cache">
            <behavior symbol="function">
                <append>[$[file]][$[date]]{$[code]}</append>
            </behavior>
        </completion>
        <completion string="^cache">
            <behavior symbol="function">
                <append>[$[file]][$[date]]{$[code]}{$[exception handled]}</append>
            </behavior>
        </completion>
       
        <completion string="^connect">
            <behavior symbol="function">
                <append>[$[connection string]]{$[code]}</append>
            </behavior>
        </completion>
        
        <completion string="^continue">
            <behavior symbol="function">
                <append>[]</append>
            </behavior>
        </completion>
        <completion string="^continue">
            <behavior symbol="function">
                <append>($[expression])</append>
            </behavior>
        </completion>
<!-- D -->
<!-- E -->
        <completion string="^eval">
            <behavior symbol="function">
                <append>($[expression])</append>
            </behavior>
        </completion>
        <completion string="^eval">
            <behavior symbol="function">
                <append>($[expression])[$[format string]]</append>
            </behavior>
        </completion>
<!-- F -->
        <completion string="^for">
            <behavior symbol="function">
                <append>[$[counter]]($[from];$[to]){$[code]}</append>
            </behavior>
        </completion>
        <completion string="^for">
            <behavior symbol="function">
                <append>[$[counter]]($[from];$[to]){$[code]}[$[string separator]]</append>
            </behavior>
        </completion>
        <completion string="^for">
            <behavior symbol="function">
                <append>[$[counter]]($[from];$[to]){$[code]}{$[code separator]}</append>
            </behavior>
        </completion>
	
<!-- G -->
<!-- H -->
<!-- I -->
        <completion string="^if">
            <behavior symbol="function">
                <append>($[expression]){$[code]}</append>
            </behavior>
        </completion>
<!-- J -->
<!-- K -->
<!-- L -->
<!-- M -->
<!-- N -->
<!-- O -->
<!-- P -->
        <completion string="^process">
            <behavior symbol="function">
                <append>{$[string]}</append>
            </behavior>
        </completion>
        <completion string="^process">
            <behavior symbol="function">
                <append>[$[context]]{$[string]}</append>
            </behavior>
        </completion>
        <completion string="^process">
            <behavior symbol="function">
                <append>[$[context]]{$[string]}[$[options]]</append>
            </behavior>
        </completion>
<!-- Q -->
<!-- R -->
        <completion string="^rem">
            <behavior symbol="function">
                <append>{$[comment]}</append>
            </behavior>
        </completion>
        
        <completion string="^return">
            <behavior symbol="function">
                <append>[]</append>
            </behavior>
        </completion>
        <completion string="^return">
            <behavior symbol="function">
                <append>[$[result]]</append>
            </behavior>
        </completion>

<!-- S -->
        <completion string="^sleep">
            <behavior symbol="function">
                <append>($[seconds])</append>
            </behavior>
        </completion>

        <completion string="^switch">
            <behavior symbol="function">
                <append>[$[string]]{$[code]}</append>
            </behavior>
        </completion>
        <completion string="^switch">
            <behavior symbol="function">
                <append>($[expression]){$[code]}</append>
            </behavior>
        </completion>
<!-- T -->
        <completion string="^taint">
            <behavior symbol="function">
                <append>[$[text]]</append>
            </behavior>
        </completion>
        <completion string="^taint">
            <behavior symbol="function">
                <append>[$[type of transformation]][$[text]]</append>
            </behavior>
        </completion>
        
        <completion string="^throw">
            <behavior symbol="function">
                <append>[$[type]]</append>
            </behavior>
        </completion>
        <completion string="^throw">
            <behavior symbol="function">
                <append>[$[type];$[source]]</append>
            </behavior>
        </completion>
        <completion string="^throw">
            <behavior symbol="function">
                <append>[$[type];$[source];$[comment]]</append>
            </behavior>
        </completion>
        <completion string="^throw">
            <behavior symbol="function">
                <append>[$[hash]]</append>
            </behavior>
        </completion>

        <completion string="^try">
            <behavior symbol="function">
                <append>{$[code]}{$[exception code]}</append>
            </behavior>
        </completion>
        <completion string="^try">
            <behavior symbol="function">
                <append>{$[code]}{$[exception code]}{$[code]}</append>
            </behavior>
        </completion>

<!-- U -->
        <completion string="^untaint">
            <behavior symbol="function">
                <append>{$[code]}</append>
            </behavior>
        </completion>
        <completion string="^untaint">
            <behavior symbol="function">
                <append>[$[type of transformation]]{$[code]}</append>
            </behavior>
        </completion>

        <completion string="^use">
            <behavior symbol="function">
                <append>[$[file]]</append>
            </behavior>
        </completion>
        <completion string="^use">
            <behavior symbol="function">
                <append>[$[file];$[options]]</append>
            </behavior>
        </completion>
<!-- V -->
<!-- W -->
        <completion string="^while">
            <behavior symbol="function">
                <append>($[expression]){$[code]}</append>
            </behavior>
        </completion>
        <completion string="^while">
            <behavior symbol="function">
                <append>($[expression]){$[code]}[$[string separator]]</append>
            </behavior>
        </completion>
        <completion string="^while">
            <behavior symbol="function">
                <append>($[expression]){$[code]}{$[code separator]}</append>
            </behavior>
        </completion>
<!-- X -->
<!-- Y -->
<!-- Z -->
    </set>
    
</completions>
