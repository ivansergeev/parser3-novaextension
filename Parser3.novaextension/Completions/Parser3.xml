<?xml version="1.0" encoding="UTF-8"?>
<completions>
   
    <!-- <provider>
        <selector>parser3</selector>
        <expression>\b[a-zA-Z0-9-_]*</expression>
        <set>parser3.entities</set>
    </provider> -->
    
	<!-- "true|false" -->	
    <provider name="constant">
        <syntax>parser3</syntax>
        <selector>*:not(string,comment)</selector>
        <expression>([a-z]+)</expression>
        <symbols type="constant" />
        <set>parser3.core.values</set>
    </provider>

    <!-- "$foo" -->
    <provider name="variable">
        <syntax>parser3</syntax>
        <selector>*:not(comment)</selector>
        <expression>(?&lt;!\-&gt;)(\$([a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff]*)?)</expression>
        <symbols type="variable,argument,constant" />
        <set>parser3.core.variables</set>
    </provider>

    <!-- "foo" -->
    <provider name="function">
        <syntax>parser3</syntax>
        <selector>*:not(string,comment)</selector>
        <!-- <expression>(?&lt;!\-&gt;|\$)(\b[a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff]*)</expression> -->
        <expression>(\^[a-zA-Z0-9_\x7f-\xff]+)</expression>

        <symbols type="function">
            <behavior>
                <arguments prefix="[" suffix="]" separator=";" />
            </behavior>
        </symbols>

        <symbols type="class,protocol" />

        <set>parser3.keywords</set>
        <set>parser3.core.functions</set>
    </provider>

    <!-- "^classes" -->
    <provider name="classes">
        <syntax>parser3</syntax>
        <selector>*:not(string,comment)</selector>
        <expression>(\^[a-zA-Z0-9_\x7f-\xff]+)</expression>
        <symbols type="class" />
        <set>parser3.core.classes</set>
    </provider>
    
	<!-- "$classes" -->
    <provider name="classes">
        <syntax>parser3</syntax>
        <selector>*:not(string,comment)</selector>
        <expression>(\$[a-zA-Z0-9_\x7f-\xff]+)</expression>
        <symbols type="class" />
        <set>parser3.core.classes.static</set>
    </provider>

    <!-- "$cookie" -->
    <provider name="cookie">
        <syntax>parser3</syntax>
        <selector>*:not(string,comment)</selector>
        <expression>(\$cookie)(\:[a-zA-Z0-9_\x7f-\xff]+)</expression>
        <symbols type="property" />
        <set>parser3.core.cookie</set>
    </provider>
   
    <!-- "^curl" -->
    <provider name="curl">
        <syntax>parser3</syntax>
        <selector>*:not(string,comment)</selector>
        <expression>(\^curl)(\:[a-zA-Z0-9_\x7f-\xff]+)</expression>
        <symbols type="method" />
        <set>parser3.core.curl</set>
    </provider>

    <!-- "curl options" -->
    <!-- 
		<provider name="curl-options">
        <syntax>parser3</syntax>
        <selector>parser3.block.curl-options</selector>
        <expression>(\$\.[a-zA-Z0-9_\x7f-\xff]+)</expression>
        <symbols type="property" />
        <set>parser3.core.curl.options</set>
    </provider> 
	-->

	<!-- "^string" -->
	<provider name="string">
		<syntax>parser3</syntax>
		<selector>*:not(string,comment)</selector>
		<expression>(\^string)(\:[a-zA-Z0-9_\x7f-\xff]+)</expression>
		<symbols type="method" />
		<set>parser3.core.string</set>
	</provider>

	<!-- "^table" -->
	<provider name="table">
		<syntax>parser3</syntax>
		<selector>*:not(string,comment)</selector>
		<expression>(\^table)(\:\:[a-zA-Z0-9_\x7f-\xff]+)</expression>
		<symbols type="method" />
		<set>parser3.core.table</set>
	</provider>

    <!-- Built-in values -->
    <set name="parser3.core.values" symbol="constant">
        <completion string="true" />
        <completion string="false" />
    </set>
    
    <set name="parser3.core.variables" symbol="variable">
        <completion string="$MAIN" />
        <completion string="$LIMITS" />
        <completion string="$MAIL" />
        <completion string="$SQL" />
        <completion string="$MIME-TYPES" />
    </set>
    
    <set name="parser3.keywords" symbol="statement">
        <completion string="and" />
        <completion string="break" />
        <completion string="case" />
        <completion string="else" />
        <completion string="for" />
        <completion string="foreach" />
        <completion string="if" />
        <completion string="eq" />
        <completion string="ne" />
        <completion string="def" />
        <completion string="is" />
        <completion string="in" />
        <completion string="lt" />
        <completion string="qt" />
        <completion string="le" />
        <completion string="qe" />
        <completion string="-f" />
        <completion string="-d" />
        <completion string="result" />
        <completion string="static" />
        <completion string="switch" />
        <completion string="throw" />
        <completion string="try" />
        <completion string="use" />
        <completion string="while" />
    </set>

<!-- ^CLASSES -->

	<set name="parser3.core.classes">
		<completion string="^curl">
			<behavior symbol="class">
				<append>:</append>
			</behavior>
		</completion>
		<completion string="^date">
			<behavior symbol="class" />
		</completion>
		<completion string="^double">
			<behavior symbol="class">
				<append>:</append>
			</behavior>
		</completion>
		<completion string="^int">
			<behavior symbol="class">
				<append>:</append>
			</behavior>
		</completion>
		<completion string="^string">
			<behavior symbol="class">
				<append>:</append>
			</behavior>
		</completion>
		<completion string="^table">
			<behavior symbol="class">
				<append>::</append>
			</behavior>
		</completion>
	</set>

	<!-- $CLASSES -->
		
	<set name="parser3.core.classes.static">
		<completion string="$console">
			<behavior symbol="class">
				<append>:</append>
			</behavior>
		</completion>
		<completion string="$cookie">
			<behavior symbol="class">
				<append>:</append>
			</behavior>
		</completion>
		<completion string="$env">
			<behavior symbol="class">
				<append>:</append>
			</behavior>
		</completion>
		<completion string="$form">
			<behavior symbol="class">
				<append>:</append>
			</behavior>
		</completion>
		<completion string="$math">
			<behavior symbol="class">
				<append>:</append>
			</behavior>
		</completion>
		<completion string="$request">
			<behavior symbol="class">
				<append>:</append>
			</behavior>
		</completion>
		<completion string="$response">
			<behavior symbol="class">
				<append>:</append>
			</behavior>
		</completion>
	</set>
	
<!-- COOKIE -->

	<set name="parser3.core.cookie">
		<completion string="$cookie:fields">
			<behavior symbol="property" />
		</completion>
	</set>

<!-- CURL -->

	<set name="parser3.core.curl">
<!-- info -->	
		<completion string="^curl:info">
			<behavior symbol="method">
				<append>[]</append>
			</behavior>
		</completion>
		<completion string="^curl:info">
			<behavior symbol="method">
				<append>[$[name]]</append>
			</behavior>
		</completion>
		
<!-- load -->	
		<completion string="^curl:load">
			<behavior symbol="method">
				<append>[]</append>
			</behavior>
		</completion>
		<completion string="^curl:load">
			<behavior symbol="method">
				<append>[$[options]]</append>
			</behavior>
		</completion>
<!-- options -->	
		<completion string="^curl:options">
			<behavior symbol="method">
				<append>[$[options]]</append>
			</behavior>
		</completion>
<!-- session -->	
		<completion string="^curl:session">
			<behavior symbol="method">
				<append>{$[code]}</append>
			</behavior>
		</completion>
<!-- version -->	
		<completion string="^curl:version">
			<behavior symbol="method">
				<append>[]</append>
			</behavior>
		</completion>
	</set>

	<!-- CURL OPTIONS -->
<!--		
	<set name="parser3.core.curl.options">
		<completion string="$.charset">
			<behavior symbol="property">
				<append>[]</append>
			</behavior>
		</completion>
		<completion string="$.content-type">
			<behavior symbol="property">
				<append>[]</append>
			</behavior>
		</completion>
		<completion string="$.library">
			<behavior symbol="property">
				<append>[$[path]]</append>
			</behavior>
		</completion>
		<completion string="$.mode">
			<behavior symbol="property">
				<append>[$[text or binary]]</append>
			</behavior>
		</completion>
		<completion string="$.name">
			<behavior symbol="property">
				<append>[]</append>
			</behavior>
		</completion>
		<completion string="$.response-charset">
			<behavior symbol="property">
				<append>[]</append>
			</behavior>
		</completion>
		<completion string="$.timeout">
			<behavior symbol="property">
				<append>()</append>
			</behavior>
		</completion>
	</set>
-->

<!-- String -->

	<set name="parser3.core.string">

		<completion string="^string:base64">
			<behavior symbol="method">
				<append>[$[string]]</append>
			</behavior>
		</completion>
		<completion string="^string:base64">
			<behavior symbol="method">
				<append>[$[string];$.strict(true)]</append>
			</behavior>
		</completion>
		<completion string="^string:idna">
			<behavior symbol="method">
				<append>[$[string]]</append>
			</behavior>
		</completion>
		<completion string="^string:js-unescape">
			<behavior symbol="method">
				<append>[$[string]]</append>
			</behavior>
		</completion>
		<completion string="^string:sql">
			<behavior symbol="method">
				<append>{
	$[sql]
}</append>
			</behavior>
		</completion>
		<completion string="^string:sql">
			<behavior symbol="method">
				<append>{
	$[sql]
}[
	$.limit(1)
	$.offset($[offset count])
	$.default{$[code]}
	$.default[$[string]]
	$.default($[expression])
	$.bind[$[variables hash]]
]</append>
			</behavior>
		</completion>
		<completion string="^string:unescape">
			<behavior symbol="method">
				<append>[$[js or uri];$[string]] </append>
			</behavior>
		</completion>
		<completion string="^string:unescape">
			<behavior symbol="method">
				<append>[$[js or uri];$[string];
	$.charset[$[charset]]
] </append>
			</behavior>
		</completion>
	</set>
	
	
<!-- Table -->

	<set name="parser3.core.table">

<!-- table::create -->
		<completion string="^table::create">
			<behavior symbol="method">
				<append>{$[data]}</append>
			</behavior>
		</completion>

		<completion string="^table::create">
			<behavior symbol="method">
				<append>[nameless]{$[data]}</append>
			</behavior>
		</completion>

		<completion string="^table::create">
			<behavior symbol="method">
				<append>{
	$[data]
}[
	$.separator[$[separator symbol]]
	$.encloser[$[encloser symbol]]
]</append>
			</behavior>
		</completion>

		<completion string="^table::create">
			<behavior symbol="method">
				<append>[$[table]]</append>
			</behavior>
		</completion>

		<completion string="^table::create">
			<behavior symbol="method">
				<append>[$[table];
	$.offset($[count])
	$.offset[cur]
	$.limit($[maximum])
	$.reverse($[true/false])
]</append>
			</behavior>
		</completion>

<!-- table::load -->

		<completion string="^table::load">
			<behavior symbol="method">
				<append>[$[file]]</append>
			</behavior>
		</completion>
		<completion string="^table::load">
			<behavior symbol="method">
				<append>[$[file];
	$.separator[$[separator symbol]]
	$.encloser[$[encloser symbol]]
]</append>
			</behavior>
		</completion>
		<completion string="^table::load">
			<behavior symbol="method">
				<append>[nameless;$[file]]</append>
			</behavior>
		</completion>
		<completion string="^table::load">
			<behavior symbol="method">
				<append>[nameless;$[file];
	$.separator[$[separator symbol]]
	$.encloser[$[encloser symbol]]
]</append>
			</behavior>
		</completion>

<!-- table::sql -->
		<completion string="^table::sql">
			<behavior symbol="method">
				<append>{$[sql]}</append>
			</behavior>
		</completion>
		<completion string="^table::sql">
			<behavior symbol="method">
				<append>{
	$[sql]
}[
	$.limit($[limit count])
	$.offset($[offset count])
	$.bind[$[variables hash]]
]</append>
			</behavior>
		</completion>
	</set>
	
	
    <set name="parser3.core.functions">
<!-- A -->
        <completion string="^apply-taint">
            <behavior symbol="function">
                <append>[$[text]]</append>
            </behavior>
        </completion>
        <completion string="^apply-taint">
            <behavior symbol="function">
                <append>[$[type of transformation]][$[text]]</append>
            </behavior>
        </completion>
<!-- B -->
        <completion string="^break">
            <behavior symbol="function">
                <append>[]</append>
            </behavior>
        </completion>
        <completion string="^break">
            <behavior symbol="function">
                <append>($[expression])</append>
            </behavior>
        </completion>
<!-- C -->
        <completion string="^cache">
            <behavior symbol="function">
                <append>[]</append>
            </behavior>
        </completion>
        <completion string="^cache">
            <behavior symbol="function">
                <append>[$[file or date]]</append>
            </behavior>
        </completion>
        <completion string="^cache">
            <behavior symbol="function">
                <append>($[seconds])</append>
            </behavior>
        </completion>
        <completion string="^cache">
            <behavior symbol="function">
                <append>[$[file]]($[seconds])</append>
            </behavior>
        </completion>
        <completion string="^cache">
            <behavior symbol="function">
                <append>[$[file]]($[seconds]){$[code]}</append>
            </behavior>
        </completion>
        <completion string="^cache">
            <behavior symbol="function">
                <append>[$[file]]($[seconds]){$[code]}{$[exception handled]}</append>
            </behavior>
        </completion>
        <completion string="^cache">
            <behavior symbol="function">
                <append>[$[file]][$[date]]{$[code]}</append>
            </behavior>
        </completion>
        <completion string="^cache">
            <behavior symbol="function">
                <append>[$[file]][$[date]]{$[code]}{$[exception handled]}</append>
            </behavior>
        </completion>
       
        <completion string="^connect">
            <behavior symbol="function">
                <append>[$[connection string]]{$[code]}</append>
            </behavior>
        </completion>
        
        <completion string="^continue">
            <behavior symbol="function">
                <append>[]</append>
            </behavior>
        </completion>
        <completion string="^continue">
            <behavior symbol="function">
                <append>($[expression])</append>
            </behavior>
        </completion>
<!-- D -->
<!-- E -->
        <completion string="^eval">
            <behavior symbol="function">
                <append>($[expression])</append>
            </behavior>
        </completion>
        <completion string="^eval">
            <behavior symbol="function">
                <append>($[expression])[$[format string]]</append>
            </behavior>
        </completion>
<!-- F -->
        <completion string="^for">
            <behavior symbol="function">
                <append>[$[counter]]($[from];$[to]){$[code]}</append>
            </behavior>
        </completion>
        <completion string="^for">
            <behavior symbol="function">
                <append>[$[counter]]($[from];$[to]){$[code]}[$[string separator]]</append>
            </behavior>
        </completion>
        <completion string="^for">
            <behavior symbol="function">
                <append>[$[counter]]($[from];$[to]){$[code]}{$[code separator]}</append>
            </behavior>
        </completion>
<!-- G -->
<!-- H -->
<!-- I -->
        <completion string="^if">
            <behavior symbol="function">
                <append>($[expression]){$[code]}</append>
            </behavior>
        </completion>
<!-- J -->
<!-- K -->
<!-- L -->
<!-- M -->
<!-- N -->
<!-- O -->
<!-- P -->
        <completion string="^process">
            <behavior symbol="function">
                <append>{$[string]}</append>
            </behavior>
        </completion>
        <completion string="^process">
            <behavior symbol="function">
                <append>[$[context]]{$[string]}</append>
            </behavior>
        </completion>
        <completion string="^process">
            <behavior symbol="function">
                <append>[$[context]]{$[string]}[$[options]]</append>
            </behavior>
        </completion>
       
<!-- Q -->
<!-- R -->
        <completion string="^rem">
            <behavior symbol="function">
                <append>{$[comment]}</append>
            </behavior>
        </completion>
        
        <completion string="^return">
            <behavior symbol="function">
                <append>[]</append>
            </behavior>
        </completion>
        <completion string="^return">
            <behavior symbol="function">
                <append>[$[result]]</append>
            </behavior>
        </completion>

<!-- S -->
        <completion string="^sleep">
            <behavior symbol="function">
                <append>($[seconds])</append>
            </behavior>
        </completion>

        <completion string="^switch">
            <behavior symbol="function">
                <append>[$[string]]{$[code]}</append>
            </behavior>
        </completion>
        <completion string="^switch">
            <behavior symbol="function">
                <append>($[expression]){$[code]}</append>
            </behavior>
        </completion>
<!-- T -->
        <completion string="^taint">
            <behavior symbol="function">
                <append>[$[text]]</append>
            </behavior>
        </completion>
        <completion string="^taint">
            <behavior symbol="function">
                <append>[$[type of transformation]][$[text]]</append>
            </behavior>
        </completion>
        
        <completion string="^throw">
            <behavior symbol="function">
                <append>[$[type]]</append>
            </behavior>
        </completion>
        <completion string="^throw">
            <behavior symbol="function">
                <append>[$[type];$[source]]</append>
            </behavior>
        </completion>
        <completion string="^throw">
            <behavior symbol="function">
                <append>[$[type];$[source];$[comment]]</append>
            </behavior>
        </completion>
        <completion string="^throw">
            <behavior symbol="function">
                <append>[$[hash]]</append>
            </behavior>
        </completion>

        <completion string="^try">
            <behavior symbol="function">
                <append>{$[code]}{$[exception code]}</append>
            </behavior>
        </completion>
        <completion string="^try">
            <behavior symbol="function">
                <append>{$[code]}{$[exception code]}{$[code]}</append>
            </behavior>
        </completion>

<!-- U -->
        <completion string="^untaint">
            <behavior symbol="function">
                <append>{$[code]}</append>
            </behavior>
        </completion>
        <completion string="^untaint">
            <behavior symbol="function">
                <append>[$[type of transformation]]{$[code]}</append>
            </behavior>
        </completion>
       
       
        <completion string="^use">
            <behavior symbol="function">
                <append>[$[file]]</append>
            </behavior>
        </completion>
        <completion string="^use">
            <behavior symbol="function">
                <append>[$[file];$[options]]</append>
            </behavior>
        </completion>
<!-- V -->
<!-- W -->
        <completion string="^while">
            <behavior symbol="function">
                <append>($[expression]){$[code]}</append>
            </behavior>
        </completion>
        <completion string="^while">
            <behavior symbol="function">
                <append>($[expression]){$[code]}[$[string separator]]</append>
            </behavior>
        </completion>
        <completion string="^while">
            <behavior symbol="function">
                <append>($[expression]){$[code]}{$[code separator]}</append>
            </behavior>
        </completion>
<!-- X -->
<!-- Y -->
<!-- Z -->
 
       
    </set>
    
</completions>
